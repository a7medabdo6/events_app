{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IS_MANAGED_ENV = exports.IS_ENV_WITH_UPDATES_ENABLED = exports.IS_ENV_WITHOUT_UPDATES_ENABLED = void 0;\nexports.downloadAsync = downloadAsync;\nexports.getManifest = getManifest;\nexports.getManifest2 = getManifest2;\nexports.manifestBaseUrl = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar IS_MANAGED_ENV = false;\nexports.IS_MANAGED_ENV = IS_MANAGED_ENV;\nvar IS_ENV_WITH_UPDATES_ENABLED = false;\nexports.IS_ENV_WITH_UPDATES_ENABLED = IS_ENV_WITH_UPDATES_ENABLED;\nvar IS_ENV_WITHOUT_UPDATES_ENABLED = false;\nexports.IS_ENV_WITHOUT_UPDATES_ENABLED = IS_ENV_WITHOUT_UPDATES_ENABLED;\nvar manifestBaseUrl = null;\nexports.manifestBaseUrl = manifestBaseUrl;\nfunction downloadAsync(uri, hash, type, name) {\n  return _regenerator.default.async(function downloadAsync$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        return _context.abrupt(\"return\", uri);\n      case 1:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}\nfunction getManifest() {\n  return {};\n}\nfunction getManifest2() {\n  return {};\n}","map":{"version":3,"sources":["../src/PlatformUtils.web.ts"],"names":[],"mappings":";;;;;;;;;;AAAO,IAAM,cAAc,GAAG,KAAK;AAAC;AAC7B,IAAM,2BAA2B,GAAG,KAAK;AAAC;AAC1C,IAAM,8BAA8B,GAAG,KAAK;AAAC;AAG7C,IAAM,eAAe,GAAG,IAAI;AAAC;AAE7B,SAAe,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;EAAA;IAAA;MAAA;QAAA,iCAChD,GAAG;MAAA;MAAA;QAAA;IAAA;EAAA;AAAA;AAGN,SAAU,WAAW,GAAA;EACzB,OAAO,CAAA,CAAE;AACX;AAEM,SAAU,YAAY,GAAA;EAC1B,OAAO,CAAA,CAAE;AACX","sourcesContent":["export const IS_MANAGED_ENV = false;\nexport const IS_ENV_WITH_UPDATES_ENABLED = false;\nexport const IS_ENV_WITHOUT_UPDATES_ENABLED = false;\n\n// Compute manifest base URL if available\nexport const manifestBaseUrl = null;\n\nexport async function downloadAsync(uri, hash, type, name): Promise<string> {\n  return uri;\n}\n\nexport function getManifest() {\n  return {};\n}\n\nexport function getManifest2() {\n  return {};\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}