{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _recyclerlistview = require(\"recyclerlistview\");\nvar _moment = _interopRequireDefault(require(\"moment\"));\nvar _jsxFileName = \"E:\\\\work\\\\PK WORK\\\\calendar-event-app-master\\\\calendar-event-app-master\\\\node_modules\\\\react-native-calendar-strip\\\\src\\\\Scroller.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar CalendarScroller = function (_Component) {\n  (0, _inherits2.default)(CalendarScroller, _Component);\n  var _super = _createSuper(CalendarScroller);\n  function CalendarScroller(props) {\n    var _this;\n    (0, _classCallCheck2.default)(this, CalendarScroller);\n    _this = _super.call(this, props);\n    _this.scrollLeft = function () {\n      if (_this.state.visibleStartIndex === 0) {\n        return;\n      }\n      var newIndex = Math.max(_this.state.visibleStartIndex - _this.state.numVisibleItems, 0);\n      _this.rlv.scrollToIndex(newIndex, true);\n    };\n    _this.scrollRight = function () {\n      var newIndex = _this.state.visibleStartIndex + _this.state.numVisibleItems;\n      if (newIndex >= _this.state.numDays - 1) {\n        _this.rlv.scrollToEnd(true);\n        return;\n      }\n      _this.rlv.scrollToIndex(newIndex, true);\n    };\n    _this.scrollToDate = function (date) {\n      var targetDate = (0, _moment.default)(date).subtract(Math.round(_this.state.numVisibleItems / 2) - 1, \"days\");\n      var _this$props = _this.props,\n        minDate = _this$props.minDate,\n        maxDate = _this$props.maxDate;\n      if (minDate && targetDate.isBefore(minDate, \"day\")) {\n        targetDate = minDate;\n      } else if (maxDate && targetDate.isAfter(maxDate, \"day\")) {\n        targetDate = maxDate;\n      }\n      for (var i = 0; i < _this.state.data.length; i++) {\n        if (_this.state.data[i].date.isSame(targetDate, \"day\")) {\n          var _this$rlv;\n          (_this$rlv = _this.rlv) == null ? void 0 : _this$rlv.scrollToIndex(i, true);\n          break;\n        }\n      }\n    };\n    _this.shiftDaysForward = function () {\n      var visibleStartDate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.visibleStartDate;\n      var prevVisStart = visibleStartDate.clone();\n      var newStartDate = prevVisStart.clone().subtract(Math.floor(_this.state.numDays / 3), \"days\");\n      _this.updateDays(prevVisStart, newStartDate);\n    };\n    _this.shiftDaysBackward = function (visibleStartDate) {\n      var prevVisStart = visibleStartDate.clone();\n      var newStartDate = prevVisStart.clone().subtract(Math.floor(_this.state.numDays * 2 / 3), \"days\");\n      _this.updateDays(prevVisStart, newStartDate);\n    };\n    _this.updateDays = function (prevVisStart, newStartDate) {\n      if (_this.shifting) {\n        return;\n      }\n      var _this$props2 = _this.props,\n        minDate = _this$props2.minDate,\n        maxDate = _this$props2.maxDate;\n      var data = [];\n      var _newStartDate = newStartDate;\n      if (minDate && newStartDate.isBefore(minDate, \"day\")) {\n        _newStartDate = (0, _moment.default)(minDate);\n      }\n      for (var i = 0; i < _this.state.numDays; i++) {\n        var date = _newStartDate.clone().add(i, \"days\");\n        if (maxDate && date.isAfter(maxDate, \"day\")) {\n          break;\n        }\n        data.push({\n          date: date\n        });\n      }\n      if (data.length < _this.props.maxSimultaneousDays) {\n        return;\n      }\n      var _loop = function _loop(i) {\n        if (data[i].date.isSame(prevVisStart, \"day\")) {\n          _this.shifting = true;\n          _this.rlv.scrollToIndex(i, false);\n          _this.timeoutResetPositionId = setTimeout(function () {\n            _this.timeoutResetPositionId = null;\n            _this.rlv.scrollToIndex(i, false);\n            _this.shifting = false;\n          }, 800);\n          return \"break\";\n        }\n      };\n      for (var _i = 0; _i < data.length; _i++) {\n        var _ret = _loop(_i);\n        if (_ret === \"break\") break;\n      }\n      _this.setState({\n        data: data,\n        dataProvider: _this.dataProvider.cloneWithRows(data)\n      });\n    };\n    _this.onVisibleIndicesChanged = function (all, now, notNow) {\n      var _this$state = _this.state,\n        data = _this$state.data,\n        numDays = _this$state.numDays,\n        numVisibleItems = _this$state.numVisibleItems,\n        _visStartDate = _this$state.visibleStartDate,\n        _visEndDate = _this$state.visibleEndDate;\n      var visibleStartIndex = all[0];\n      var visibleStartDate = data[visibleStartIndex] ? data[visibleStartIndex].date : (0, _moment.default)();\n      var visibleEndIndex = Math.min(visibleStartIndex + numVisibleItems - 1, data.length - 1);\n      var visibleEndDate = data[visibleEndIndex] ? data[visibleEndIndex].date : (0, _moment.default)();\n      var _this$props3 = _this.props,\n        updateMonthYear = _this$props3.updateMonthYear,\n        onWeekChanged = _this$props3.onWeekChanged;\n      if (!_visStartDate || !_visEndDate || !visibleStartDate.isSame(_visStartDate, \"week\") || !visibleEndDate.isSame(_visEndDate, \"week\") || !visibleStartDate.isSame(_visStartDate, \"month\") || !visibleEndDate.isSame(_visEndDate, \"month\")) {\n        var visStart = visibleStartDate && visibleStartDate.clone();\n        var visEnd = visibleEndDate && visibleEndDate.clone();\n        onWeekChanged && onWeekChanged(visStart, visEnd);\n      }\n      updateMonthYear && updateMonthYear(visibleStartDate, visibleEndDate);\n      if (visibleStartIndex === 0) {\n        _this.shiftDaysBackward(visibleStartDate);\n      } else {\n        var minEndOffset = numDays - numVisibleItems;\n        if (minEndOffset > numVisibleItems) {\n          for (var _iterator = _createForOfIteratorHelperLoose(all), _step; !(_step = _iterator()).done;) {\n            var a = _step.value;\n            if (a > minEndOffset) {\n              _this.shiftDaysForward(visibleStartDate);\n              break;\n            }\n          }\n        }\n      }\n      _this.setState({\n        visibleStartDate: visibleStartDate,\n        visibleEndDate: visibleEndDate,\n        visibleStartIndex: visibleStartIndex\n      });\n    };\n    _this.onScrollStart = function (event) {\n      var onWeekScrollStart = _this.props.onWeekScrollStart;\n      var _this$state2 = _this.state,\n        prevStartDate = _this$state2.prevStartDate,\n        prevEndDate = _this$state2.prevEndDate;\n      if (onWeekScrollStart && prevStartDate && prevEndDate) {\n        onWeekScrollStart(prevStartDate.clone(), prevEndDate.clone());\n      }\n    };\n    _this.onScrollEnd = function () {\n      var onWeekScrollEnd = _this.props.onWeekScrollEnd;\n      var _this$state3 = _this.state,\n        visibleStartDate = _this$state3.visibleStartDate,\n        visibleEndDate = _this$state3.visibleEndDate,\n        prevEndDate = _this$state3.prevEndDate;\n      if (onWeekScrollEnd && visibleStartDate && visibleEndDate) {\n        if (!visibleEndDate.isSame(prevEndDate, \"day\")) {\n          onWeekScrollEnd(visibleStartDate.clone(), visibleEndDate.clone());\n        }\n      }\n    };\n    _this.onScrollBeginDrag = function () {\n      var _this$props4 = _this.props,\n        onWeekScrollStart = _this$props4.onWeekScrollStart,\n        onWeekScrollEnd = _this$props4.onWeekScrollEnd;\n      if (!onWeekScrollStart && !onWeekScrollEnd) {\n        return;\n      }\n      var _this$state4 = _this.state,\n        data = _this$state4.data,\n        visibleStartDate = _this$state4.visibleStartDate,\n        visibleEndDate = _this$state4.visibleEndDate,\n        visibleStartIndex = _this$state4.visibleStartIndex,\n        visibleEndIndex = _this$state4.visibleEndIndex;\n      var prevStartDate = visibleStartDate ? visibleStartDate : data[visibleStartIndex] ? data[visibleStartIndex].date : (0, _moment.default)();\n      var prevEndDate = visibleEndDate ? visibleEndDate : data[visibleEndIndex] ? data[visibleEndIndex].date : (0, _moment.default)();\n      _this.setState({\n        prevStartDate: prevStartDate,\n        prevEndDate: prevEndDate\n      });\n    };\n    _this.onLayout = function (event) {\n      var width = event.nativeEvent.layout.width;\n      _this.setState({\n        numVisibleItems: Math.round(width / _this.state.itemWidth)\n      });\n    };\n    _this.rowRenderer = function (type, data, i, extState) {\n      return _this.props.renderDay && _this.props.renderDay((0, _extends2.default)({}, data, extState));\n    };\n    _this.timeoutResetPositionId = null;\n    _this.updateLayout = function (renderDayParams) {\n      var itemHeight = renderDayParams.height;\n      var itemWidth = renderDayParams.width + renderDayParams.marginHorizontal * 2;\n      var layoutProvider = new _recyclerlistview.LayoutProvider(function (index) {\n        return 0;\n      }, function (type, dim) {\n        dim.width = itemWidth;\n        dim.height = itemHeight;\n      });\n      return {\n        layoutProvider: layoutProvider,\n        itemHeight: itemHeight,\n        itemWidth: itemWidth\n      };\n    };\n    _this.dataProvider = new _recyclerlistview.DataProvider(function (r1, r2) {\n      return r1 !== r2;\n    });\n    _this.updateDaysData = function (data) {\n      return {\n        data: data,\n        numDays: data.length,\n        dataProvider: _this.dataProvider.cloneWithRows(data)\n      };\n    };\n    _this.state = (0, _extends2.default)({}, _this.updateLayout(props.renderDayParams), _this.updateDaysData(props.data), {\n      numVisibleItems: 1\n    });\n    return _this;\n  }\n  (0, _createClass2.default)(CalendarScroller, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timeoutResetPositionId !== null) {\n        clearTimeout(this.timeoutResetPositionId);\n        this.timeoutResetPositionId = null;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var newState = {};\n      var updateState = false;\n      var _this$props$renderDay = this.props.renderDayParams,\n        width = _this$props$renderDay.width,\n        height = _this$props$renderDay.height,\n        selectedDate = _this$props$renderDay.selectedDate;\n      if (width !== prevProps.renderDayParams.width || height !== prevProps.renderDayParams.height) {\n        updateState = true;\n        newState = this.updateLayout(this.props.renderDayParams);\n      }\n      if (selectedDate !== prevProps.renderDayParams.selectedDate) {\n        this.scrollToDate(selectedDate);\n      }\n      if (this.props.data !== prevProps.data) {\n        updateState = true;\n        newState = (0, _extends2.default)({}, newState, this.updateDaysData(this.props.data));\n      }\n      if (updateState) {\n        this.setState(newState);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      if (!this.state.data || this.state.numDays === 0 || !this.state.itemHeight) {\n        return null;\n      }\n      var pagingProps = this.props.pagingEnabled ? {\n        decelerationRate: 0,\n        snapToInterval: this.state.itemWidth * this.state.numVisibleItems\n      } : {};\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          height: this.state.itemHeight,\n          flex: 1\n        },\n        onLayout: this.onLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_recyclerlistview.RecyclerListView, {\n        ref: function ref(rlv) {\n          return _this2.rlv = rlv;\n        },\n        layoutProvider: this.state.layoutProvider,\n        dataProvider: this.state.dataProvider,\n        rowRenderer: this.rowRenderer,\n        extendedState: this.props.renderDayParams,\n        initialRenderIndex: this.props.initialRenderIndex,\n        onVisibleIndicesChanged: this.onVisibleIndicesChanged,\n        isHorizontal: true,\n        externalScrollView: this.props.externalScrollView,\n        scrollViewProps: (0, _extends2.default)({\n          showsHorizontalScrollIndicator: false,\n          contentContainerStyle: {\n            paddingRight: this.state.itemWidth / 2\n          },\n          onMomentumScrollBegin: this.onScrollStart,\n          onMomentumScrollEnd: this.onScrollEnd,\n          onScrollBeginDrag: this.onScrollBeginDrag\n        }, pagingProps),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return CalendarScroller;\n}(_react.Component);\nexports.default = CalendarScroller;\nCalendarScroller.propTypes = {\n  data: _propTypes.default.array.isRequired,\n  initialRenderIndex: _propTypes.default.number,\n  renderDay: _propTypes.default.func,\n  renderDayParams: _propTypes.default.object.isRequired,\n  minDate: _propTypes.default.any,\n  maxDate: _propTypes.default.any,\n  maxSimultaneousDays: _propTypes.default.number,\n  updateMonthYear: _propTypes.default.func,\n  onWeekChanged: _propTypes.default.func,\n  onWeekScrollStart: _propTypes.default.func,\n  onWeekScrollEnd: _propTypes.default.func,\n  externalScrollView: _propTypes.default.func,\n  pagingEnabled: _propTypes.default.bool\n};\nCalendarScroller.defaultProps = {\n  data: [],\n  renderDayParams: {}\n};","map":{"version":3,"names":["CalendarScroller","props","scrollLeft","state","visibleStartIndex","newIndex","Math","max","numVisibleItems","rlv","scrollToIndex","scrollRight","numDays","scrollToEnd","scrollToDate","date","targetDate","moment","subtract","round","minDate","maxDate","isBefore","isAfter","i","data","length","isSame","shiftDaysForward","visibleStartDate","prevVisStart","clone","newStartDate","floor","updateDays","shiftDaysBackward","shifting","_newStartDate","add","push","maxSimultaneousDays","timeoutResetPositionId","setTimeout","setState","dataProvider","cloneWithRows","onVisibleIndicesChanged","all","now","notNow","_visStartDate","_visEndDate","visibleEndDate","visibleEndIndex","min","updateMonthYear","onWeekChanged","visStart","visEnd","minEndOffset","a","onScrollStart","event","onWeekScrollStart","prevStartDate","prevEndDate","onScrollEnd","onWeekScrollEnd","onScrollBeginDrag","onLayout","width","nativeEvent","layout","itemWidth","rowRenderer","type","extState","renderDay","updateLayout","renderDayParams","itemHeight","height","marginHorizontal","layoutProvider","LayoutProvider","index","dim","DataProvider","r1","r2","updateDaysData","clearTimeout","prevProps","prevState","newState","updateState","selectedDate","pagingProps","pagingEnabled","decelerationRate","snapToInterval","flex","initialRenderIndex","externalScrollView","showsHorizontalScrollIndicator","contentContainerStyle","paddingRight","onMomentumScrollBegin","onMomentumScrollEnd","Component","propTypes","PropTypes","array","isRequired","number","func","object","any","bool","defaultProps"],"sources":["E:/work/PK WORK/calendar-event-app-master/calendar-event-app-master/node_modules/react-native-calendar-strip/src/Scroller.js"],"sourcesContent":["// This is a bi-directional infinite scroller.\r\n// As the beginning & end are reached, the dates are recalculated and the current\r\n// index adjusted to match the previous visible date.\r\n// RecyclerListView helps to efficiently recycle instances, but the data that\r\n// it's fed is finite. Hence the data must be shifted at the ends to appear as\r\n// an infinite scroller.\r\n\r\nimport React, { Component } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport PropTypes from \"prop-types\";\r\nimport { RecyclerListView, DataProvider, LayoutProvider } from \"recyclerlistview\";\r\nimport moment from \"moment\";\r\n\r\nexport default class CalendarScroller extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    initialRenderIndex: PropTypes.number,\r\n    renderDay: PropTypes.func,\r\n    renderDayParams: PropTypes.object.isRequired,\r\n    minDate: PropTypes.any,\r\n    maxDate: PropTypes.any,\r\n    maxSimultaneousDays: PropTypes.number,\r\n    updateMonthYear: PropTypes.func,\r\n    onWeekChanged: PropTypes.func,\r\n    onWeekScrollStart: PropTypes.func,\r\n    onWeekScrollEnd: PropTypes.func,\r\n    externalScrollView: PropTypes.func,\r\n    pagingEnabled: PropTypes.bool\r\n  }\r\n\r\n  static defaultProps = {\r\n    data: [],\r\n    renderDayParams: {},\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.timeoutResetPositionId = null;\r\n\r\n    this.updateLayout = renderDayParams => {\r\n      const itemHeight = renderDayParams.height;\r\n      const itemWidth = renderDayParams.width + renderDayParams.marginHorizontal * 2;\r\n\r\n      const layoutProvider = new LayoutProvider(\r\n        index => 0, // only 1 view type\r\n        (type, dim) => {\r\n          dim.width = itemWidth;\r\n          dim.height = itemHeight;\r\n        }\r\n      );\r\n\r\n      return { layoutProvider, itemHeight, itemWidth };\r\n    }\r\n\r\n    this.dataProvider = new DataProvider((r1, r2) => {\r\n      return r1 !== r2;\r\n    });\r\n\r\n    this.updateDaysData = data => {\r\n      return {\r\n        data,\r\n        numDays: data.length,\r\n        dataProvider: this.dataProvider.cloneWithRows(data),\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      ...this.updateLayout(props.renderDayParams),\r\n      ...this.updateDaysData(props.data),\r\n      numVisibleItems: 1, // updated in onLayout\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.timeoutResetPositionId !== null) {\r\n      clearTimeout(this.timeoutResetPositionId);\r\n      this.timeoutResetPositionId = null;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    let newState = {};\r\n    let updateState = false;\r\n\r\n    const {\r\n      width,\r\n      height,\r\n      selectedDate\r\n    } = this.props.renderDayParams;\r\n    if (width !== prevProps.renderDayParams.width || height !== prevProps.renderDayParams.height) {\r\n      updateState = true;\r\n      newState = this.updateLayout(this.props.renderDayParams);\r\n    }\r\n\r\n    if (selectedDate !== prevProps.renderDayParams.selectedDate) {\r\n      this.scrollToDate(selectedDate);\r\n    }\r\n\r\n    if (this.props.data !== prevProps.data) {\r\n      updateState = true;\r\n      newState = {...newState, ...this.updateDaysData(this.props.data)};\r\n    }\r\n\r\n    if (updateState) {\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  // Scroll left, guarding against start index.\r\n  scrollLeft = () => {\r\n    if (this.state.visibleStartIndex === 0) {\r\n      return;\r\n    }\r\n    const newIndex = Math.max(this.state.visibleStartIndex - this.state.numVisibleItems, 0);\r\n    this.rlv.scrollToIndex(newIndex, true);\r\n  }\r\n\r\n  // Scroll right, guarding against end index.\r\n  scrollRight = () => {\r\n    const newIndex = this.state.visibleStartIndex + this.state.numVisibleItems;\r\n    if (newIndex >= (this.state.numDays - 1)) {\r\n      this.rlv.scrollToEnd(true); // scroll to the very end, including padding\r\n      return;\r\n    }\r\n    this.rlv.scrollToIndex(newIndex, true);\r\n  }\r\n\r\n  // Scroll to given date, and check against min and max date if available.\r\n  scrollToDate = (date) => {\r\n    let targetDate = moment(date).subtract(Math.round(this.state.numVisibleItems / 2) - 1, \"days\");\r\n    const {\r\n      minDate,\r\n      maxDate,\r\n    } = this.props;\r\n\r\n    // Falls back to min or max date when the given date exceeds the available dates\r\n    if (minDate && targetDate.isBefore(minDate, \"day\")) {\r\n      targetDate = minDate;\r\n    } else if (maxDate && targetDate.isAfter(maxDate, \"day\")) {\r\n      targetDate = maxDate;\r\n    }\r\n\r\n    for (let i = 0; i < this.state.data.length; i++) {\r\n      if (this.state.data[i].date.isSame(targetDate, \"day\")) {\r\n        this.rlv?.scrollToIndex(i, true);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Shift dates when end of list is reached.\r\n  shiftDaysForward = (visibleStartDate = this.state.visibleStartDate) => {\r\n    const prevVisStart = visibleStartDate.clone();\r\n    const newStartDate = prevVisStart.clone().subtract(Math.floor(this.state.numDays / 3), \"days\");\r\n    this.updateDays(prevVisStart, newStartDate);\r\n  }\r\n\r\n  // Shift dates when beginning of list is reached.\r\n  shiftDaysBackward = (visibleStartDate) => {\r\n    const prevVisStart = visibleStartDate.clone();\r\n    const newStartDate = prevVisStart.clone().subtract(Math.floor(this.state.numDays * 2/3), \"days\");\r\n    this.updateDays(prevVisStart, newStartDate);\r\n  }\r\n\r\n  updateDays = (prevVisStart, newStartDate) => {\r\n    if (this.shifting) {\r\n      return;\r\n    }\r\n    const {\r\n      minDate,\r\n      maxDate,\r\n    } = this.props;\r\n    const data = [];\r\n    let _newStartDate = newStartDate;\r\n    if (minDate && newStartDate.isBefore(minDate, \"day\")) {\r\n      _newStartDate = moment(minDate);\r\n    }\r\n    for (let i = 0; i < this.state.numDays; i++) {\r\n      let date = _newStartDate.clone().add(i, \"days\");\r\n      if (maxDate && date.isAfter(maxDate, \"day\")) {\r\n        break;\r\n      }\r\n      data.push({date});\r\n    }\r\n    // Prevent reducing range when the minDate - maxDate range is small.\r\n    if (data.length < this.props.maxSimultaneousDays) {\r\n      return;\r\n    }\r\n\r\n    // Scroll to previous date\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].date.isSame(prevVisStart, \"day\")) {\r\n        this.shifting = true;\r\n        this.rlv.scrollToIndex(i, false);\r\n        // RecyclerListView sometimes returns position to old index after\r\n        // moving to the new one. Set position again after delay.\r\n        this.timeoutResetPositionId = setTimeout(() => {\r\n          this.timeoutResetPositionId = null;\r\n          this.rlv.scrollToIndex(i, false);\r\n          this.shifting = false; // debounce\r\n        }, 800);\r\n        break;\r\n      }\r\n    }\r\n    this.setState({\r\n      data,\r\n      dataProvider: this.dataProvider.cloneWithRows(data),\r\n    });\r\n  }\r\n\r\n  // Track which dates are visible.\r\n  onVisibleIndicesChanged = (all, now, notNow) => {\r\n    const {\r\n      data,\r\n      numDays,\r\n      numVisibleItems,\r\n      visibleStartDate: _visStartDate,\r\n      visibleEndDate: _visEndDate,\r\n    } = this.state;\r\n    const visibleStartIndex = all[0];\r\n    const visibleStartDate = data[visibleStartIndex] ? data[visibleStartIndex].date : moment();\r\n    const visibleEndIndex = Math.min(visibleStartIndex + numVisibleItems - 1, data.length - 1);\r\n    const visibleEndDate = data[visibleEndIndex] ? data[visibleEndIndex].date : moment();\r\n\r\n    const {\r\n      updateMonthYear,\r\n      onWeekChanged,\r\n    } = this.props;\r\n\r\n    // Fire month/year update on both week and month changes.  This is\r\n    // necessary for the header and onWeekChanged updates.\r\n    if (!_visStartDate || !_visEndDate ||\r\n        !visibleStartDate.isSame(_visStartDate, \"week\") ||\r\n        !visibleEndDate.isSame(_visEndDate, \"week\") ||\r\n        !visibleStartDate.isSame(_visStartDate, \"month\") ||\r\n        !visibleEndDate.isSame(_visEndDate, \"month\") )\r\n    {\r\n      const visStart = visibleStartDate && visibleStartDate.clone();\r\n      const visEnd = visibleEndDate && visibleEndDate.clone();\r\n      onWeekChanged && onWeekChanged(visStart, visEnd);\r\n    }\r\n\r\n    // Always update weekstart/end for WeekSelectors.\r\n    updateMonthYear && updateMonthYear(visibleStartDate, visibleEndDate);\r\n\r\n    if (visibleStartIndex === 0) {\r\n      this.shiftDaysBackward(visibleStartDate);\r\n    } else {\r\n      const minEndOffset = numDays - numVisibleItems;\r\n      if (minEndOffset > numVisibleItems) {\r\n        for (let a of all) {\r\n          if (a > minEndOffset) {\r\n            this.shiftDaysForward(visibleStartDate);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      visibleStartDate,\r\n      visibleEndDate,\r\n      visibleStartIndex,\r\n    });\r\n  }\r\n\r\n  onScrollStart = (event) => {\r\n    const {onWeekScrollStart} = this.props;\r\n    const {prevStartDate, prevEndDate} = this.state;\r\n\r\n    if (onWeekScrollStart && prevStartDate && prevEndDate) {\r\n      onWeekScrollStart(prevStartDate.clone(), prevEndDate.clone());\r\n    }\r\n  }\r\n\r\n  onScrollEnd = () => {\r\n    const {onWeekScrollEnd} = this.props;\r\n    const {visibleStartDate, visibleEndDate, prevEndDate} = this.state;\r\n\r\n    if (onWeekScrollEnd && visibleStartDate && visibleEndDate) {\r\n      if (!visibleEndDate.isSame(prevEndDate, \"day\")) {\r\n        onWeekScrollEnd(visibleStartDate.clone(), visibleEndDate.clone());\r\n      }\r\n    }\r\n  }\r\n\r\n  onScrollBeginDrag = () => {\r\n    const {\r\n      onWeekScrollStart,\r\n      onWeekScrollEnd,\r\n    } = this.props;\r\n    // Prev dates required only if scroll callbacks are defined\r\n    if (!onWeekScrollStart && !onWeekScrollEnd) {\r\n      return;\r\n    }\r\n    const {\r\n      data,\r\n      visibleStartDate,\r\n      visibleEndDate,\r\n      visibleStartIndex,\r\n      visibleEndIndex,\r\n    } = this.state;\r\n    const prevStartDate = visibleStartDate ? visibleStartDate\r\n      : (data[visibleStartIndex] ? data[visibleStartIndex].date : moment());\r\n    const prevEndDate = visibleEndDate ? visibleEndDate\r\n      : (data[visibleEndIndex] ? data[visibleEndIndex].date : moment());\r\n\r\n    this.setState({\r\n      prevStartDate,\r\n      prevEndDate,\r\n    });\r\n  }\r\n\r\n  onLayout = event => {\r\n    let width = event.nativeEvent.layout.width;\r\n    this.setState({\r\n      numVisibleItems: Math.round(width / this.state.itemWidth),\r\n    });\r\n  }\r\n\r\n  rowRenderer = (type, data, i, extState) => {\r\n    return this.props.renderDay && this.props.renderDay({...data, ...extState});\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.data || this.state.numDays === 0 || !this.state.itemHeight) {\r\n      return null;\r\n    }\r\n\r\n    const pagingProps = this.props.pagingEnabled ? {\r\n      decelerationRate: 0,\r\n      snapToInterval: this.state.itemWidth * this.state.numVisibleItems\r\n    } : {};\r\n\r\n    return (\r\n      <View\r\n        style={{ height: this.state.itemHeight, flex: 1 }}\r\n        onLayout={this.onLayout}\r\n      >\r\n        <RecyclerListView\r\n          ref={rlv => this.rlv = rlv}\r\n          layoutProvider={this.state.layoutProvider}\r\n          dataProvider={this.state.dataProvider}\r\n          rowRenderer={this.rowRenderer}\r\n          extendedState={this.props.renderDayParams}\r\n          initialRenderIndex={this.props.initialRenderIndex}\r\n          onVisibleIndicesChanged={this.onVisibleIndicesChanged}\r\n          isHorizontal\r\n          externalScrollView={this.props.externalScrollView}\r\n          scrollViewProps={{\r\n            showsHorizontalScrollIndicator: false,\r\n            contentContainerStyle: { paddingRight: this.state.itemWidth / 2 },\r\n            onMomentumScrollBegin: this.onScrollStart,\r\n            onMomentumScrollEnd: this.onScrollEnd,\r\n            onScrollBeginDrag: this.onScrollBeginDrag,\r\n            ...pagingProps\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}