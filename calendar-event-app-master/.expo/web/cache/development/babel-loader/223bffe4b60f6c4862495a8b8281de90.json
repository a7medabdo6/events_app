{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar rtlDetect = _interopRequireWildcard(require(\"rtl-detect\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar getNavigatorLocales = function getNavigatorLocales() {\n  return _expoModulesCore.Platform.isDOMAvailable ? navigator.languages || [navigator.language] : [];\n};\nvar _default = {\n  get currency() {\n    return null;\n  },\n  get decimalSeparator() {\n    return 1.1.toLocaleString().substring(1, 2);\n  },\n  get digitGroupingSeparator() {\n    var value = 1000 .toLocaleString();\n    return value.length === 5 ? value.substring(1, 2) : '';\n  },\n  get isRTL() {\n    var _rtlDetect$isRtlLang;\n    return (_rtlDetect$isRtlLang = rtlDetect.isRtlLang(this.locale)) != null ? _rtlDetect$isRtlLang : false;\n  },\n  get isMetric() {\n    var region = this.region;\n    switch (region) {\n      case 'US':\n      case 'LR':\n      case 'MM':\n        return false;\n    }\n    return true;\n  },\n  get locale() {\n    if (!_expoModulesCore.Platform.isDOMAvailable) {\n      return '';\n    }\n    var locale = navigator.language || navigator['systemLanguage'] || navigator['browserLanguage'] || navigator['userLanguage'] || this.locales[0];\n    return locale;\n  },\n  get locales() {\n    if (!_expoModulesCore.Platform.isDOMAvailable) {\n      return [];\n    }\n    var _navigator = navigator,\n      _navigator$languages = _navigator.languages,\n      languages = _navigator$languages === void 0 ? [] : _navigator$languages;\n    return Array.from(languages);\n  },\n  get timezone() {\n    var defaultTimeZone = 'Etc/UTC';\n    if (typeof Intl === 'undefined') {\n      return defaultTimeZone;\n    }\n    return Intl.DateTimeFormat().resolvedOptions().timeZone || defaultTimeZone;\n  },\n  get isoCurrencyCodes() {\n    return [];\n  },\n  get region() {\n    var locale = this.locale;\n    var _ref = typeof locale === 'string' ? locale.split('-') : [],\n      _ref2 = (0, _toArray2.default)(_ref),\n      suffixes = _ref2.slice(1);\n    for (var _iterator = _createForOfIteratorHelperLoose(suffixes), _step; !(_step = _iterator()).done;) {\n      var suffix = _step.value;\n      if (suffix.length === 2) {\n        return suffix.toUpperCase();\n      }\n    }\n    return null;\n  },\n  getLocales: function getLocales() {\n    var locales = getNavigatorLocales();\n    return locales == null ? void 0 : locales.map(function (languageTag) {\n      var locale = typeof Intl !== 'undefined' ? new Intl.Locale(languageTag) : {\n        region: null,\n        textInfo: null,\n        language: null\n      };\n      var region = locale.region,\n        textInfo = locale.textInfo,\n        language = locale.language;\n      var digitGroupingSeparator = Array.from(10000 .toLocaleString(languageTag)).filter(function (c) {\n        return c > '9' || c < '0';\n      })[0] || null;\n      var decimalSeparator = 1.1.toLocaleString(languageTag).substring(1, 2);\n      return {\n        languageTag: languageTag,\n        languageCode: language || languageTag.split('-')[0] || 'en',\n        textDirection: (textInfo == null ? void 0 : textInfo.direction) || null,\n        digitGroupingSeparator: digitGroupingSeparator,\n        decimalSeparator: decimalSeparator,\n        measurementSystem: null,\n        currencyCode: null,\n        currencySymbol: null,\n        regionCode: region || null\n      };\n    });\n  },\n  getCalendars: function getCalendars() {\n    var _locale$calendars, _locale$timeZones, _startsWith, _ref3, _locale$hourCycles, _locale$weekInfo;\n    var locales = (0, _toConsumableArray2.default)(getNavigatorLocales()).sort(function (a, b) {\n      return a.includes('-') === b.includes('-') ? 0 : a.includes('-') ? -1 : 1;\n    });\n    var locale = locales[0] && typeof Intl !== 'undefined' ? new Intl.Locale(locales[0]) : null;\n    return [{\n      calendar: (locale == null ? void 0 : locale.calendar) || (locale == null ? void 0 : (_locale$calendars = locale.calendars) == null ? void 0 : _locale$calendars[0]) || null,\n      timeZone: (locale == null ? void 0 : locale.timeZone) || (locale == null ? void 0 : (_locale$timeZones = locale.timeZones) == null ? void 0 : _locale$timeZones[0]) || null,\n      uses24hourClock: (_startsWith = (_ref3 = (locale == null ? void 0 : locale.hourCycle) || (locale == null ? void 0 : (_locale$hourCycles = locale.hourCycles) == null ? void 0 : _locale$hourCycles[0])) == null ? void 0 : _ref3.startsWith('h2')) != null ? _startsWith : null,\n      firstWeekday: (locale == null ? void 0 : (_locale$weekInfo = locale.weekInfo) == null ? void 0 : _locale$weekInfo.firstDay) || null\n    }];\n  },\n  getLocalizationAsync: function getLocalizationAsync() {\n    var _this = this;\n    return function _callee() {\n      var currency, decimalSeparator, digitGroupingSeparator, isoCurrencyCodes, isMetric, isRTL, locale, locales, region, timezone;\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            currency = _this.currency, decimalSeparator = _this.decimalSeparator, digitGroupingSeparator = _this.digitGroupingSeparator, isoCurrencyCodes = _this.isoCurrencyCodes, isMetric = _this.isMetric, isRTL = _this.isRTL, locale = _this.locale, locales = _this.locales, region = _this.region, timezone = _this.timezone;\n            return _context.abrupt(\"return\", {\n              currency: currency,\n              decimalSeparator: decimalSeparator,\n              digitGroupingSeparator: digitGroupingSeparator,\n              isoCurrencyCodes: isoCurrencyCodes,\n              isMetric: isMetric,\n              isRTL: isRTL,\n              locale: locale,\n              locales: locales,\n              region: region,\n              timezone: timezone\n            });\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};\nexports.default = _default;","map":{"version":3,"sources":["../src/ExpoLocalization.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-env browser */\nimport { Platform } from 'expo-modules-core';\nimport * as rtlDetect from 'rtl-detect';\n\nimport { Localization, Calendar, Locale, CalendarIdentifier } from './Localization.types';\n\nconst getNavigatorLocales = () => {\n  return Platform.isDOMAvailable ? navigator.languages || [navigator.language] : [];\n};\n\ntype ExtendedLocale = Intl.Locale &\n  // typescript definitions for navigator language don't include some modern Intl properties\n  Partial<{\n    textInfo: { direction: 'ltr' | 'rtl' };\n    timeZones: string[];\n    weekInfo: { firstDay: number };\n    hourCycles: string[];\n    timeZone: string;\n    calendars: string[];\n  }>;\n\nexport default {\n  get currency(): string | null {\n    // TODO: Add support\n    return null;\n  },\n  get decimalSeparator(): string {\n    return (1.1).toLocaleString().substring(1, 2);\n  },\n  get digitGroupingSeparator(): string {\n    const value = (1000).toLocaleString();\n    return value.length === 5 ? value.substring(1, 2) : '';\n  },\n  get isRTL(): boolean {\n    return rtlDetect.isRtlLang(this.locale) ?? false;\n  },\n  get isMetric(): boolean {\n    const { region } = this;\n    switch (region) {\n      case 'US': // USA\n      case 'LR': // Liberia\n      case 'MM': // Myanmar\n        return false;\n    }\n    return true;\n  },\n  get locale(): string {\n    if (!Platform.isDOMAvailable) {\n      return '';\n    }\n    const locale =\n      navigator.language ||\n      navigator['systemLanguage'] ||\n      navigator['browserLanguage'] ||\n      navigator['userLanguage'] ||\n      this.locales[0];\n    return locale;\n  },\n  get locales(): string[] {\n    if (!Platform.isDOMAvailable) {\n      return [];\n    }\n    const { languages = [] } = navigator;\n    return Array.from(languages);\n  },\n  get timezone(): string {\n    const defaultTimeZone = 'Etc/UTC';\n    if (typeof Intl === 'undefined') {\n      return defaultTimeZone;\n    }\n    return Intl.DateTimeFormat().resolvedOptions().timeZone || defaultTimeZone;\n  },\n  get isoCurrencyCodes(): string[] {\n    // TODO(Bacon): Add this - very low priority\n    return [];\n  },\n  get region(): string | null {\n    // There is no way to obtain the current region, as is possible on native.\n    // Instead, use the country-code from the locale when possible (e.g. \"en-US\").\n    const { locale } = this;\n    const [, ...suffixes] = typeof locale === 'string' ? locale.split('-') : [];\n    for (const suffix of suffixes) {\n      if (suffix.length === 2) {\n        return suffix.toUpperCase();\n      }\n    }\n    return null;\n  },\n\n  getLocales(): Locale[] {\n    const locales = getNavigatorLocales();\n    return locales?.map((languageTag) => {\n      // TextInfo is an experimental API that is not available in all browsers.\n      // We might want to consider using a locale lookup table instead.\n      const locale =\n        typeof Intl !== 'undefined'\n          ? (new Intl.Locale(languageTag) as unknown as ExtendedLocale)\n          : { region: null, textInfo: null, language: null };\n      const { region, textInfo, language } = locale;\n\n      // Properties added only for compatibility with native, use `toLocaleString` instead.\n      const digitGroupingSeparator =\n        Array.from((10000).toLocaleString(languageTag)).filter((c) => c > '9' || c < '0')[0] ||\n        null; // using 1e5 instead of 1e4 since for some locales (like pl-PL) 1e4 does not use digit grouping\n      const decimalSeparator = (1.1).toLocaleString(languageTag).substring(1, 2);\n\n      return {\n        languageTag,\n        languageCode: language || languageTag.split('-')[0] || 'en',\n        textDirection: (textInfo?.direction as 'ltr' | 'rtl') || null,\n        digitGroupingSeparator,\n        decimalSeparator,\n        measurementSystem: null,\n        currencyCode: null,\n        currencySymbol: null,\n        regionCode: region || null,\n      };\n    });\n  },\n  getCalendars(): Calendar[] {\n    // Prefer locales with region codes as they contain more info about calendar.\n    // They seem to always exist in the list for each locale without region\n    const locales = [...getNavigatorLocales()].sort((a, b) =>\n      a.includes('-') === b.includes('-') ? 0 : a.includes('-') ? -1 : 1\n    );\n    const locale = (locales[0] && typeof Intl !== 'undefined'\n      ? new Intl.Locale(locales[0])\n      : null) as unknown as null | ExtendedLocale;\n    return [\n      {\n        calendar: ((locale?.calendar || locale?.calendars?.[0]) as CalendarIdentifier) || null,\n        timeZone: locale?.timeZone || locale?.timeZones?.[0] || null,\n        uses24hourClock: (locale?.hourCycle || locale?.hourCycles?.[0])?.startsWith('h2') ?? null, //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle\n        firstWeekday: locale?.weekInfo?.firstDay || null,\n      },\n    ];\n  },\n  async getLocalizationAsync(): Promise<Omit<Localization, 'getCalendars' | 'getLocales'>> {\n    const {\n      currency,\n      decimalSeparator,\n      digitGroupingSeparator,\n      isoCurrencyCodes,\n      isMetric,\n      isRTL,\n      locale,\n      locales,\n      region,\n      timezone,\n    } = this;\n    return {\n      currency,\n      decimalSeparator,\n      digitGroupingSeparator,\n      isoCurrencyCodes,\n      isMetric,\n      isRTL,\n      locale,\n      locales,\n      region,\n      timezone,\n    };\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}