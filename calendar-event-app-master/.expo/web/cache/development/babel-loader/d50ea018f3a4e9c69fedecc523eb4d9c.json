{"ast":null,"code":"var _interface = require(\"./interface\");\nvar XDate = require('xdate');\nfunction sameMonth(a, b) {\n  return a instanceof XDate && b instanceof XDate && a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth();\n}\nfunction sameDate(a, b) {\n  return a instanceof XDate && b instanceof XDate && a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n}\nfunction sameWeek(d1, d2, firstDayOfWeek) {\n  var weekDates = getWeekDates(d1, firstDayOfWeek, 'yyyy-MM-dd');\n  return weekDates == null ? void 0 : weekDates.includes(d2);\n}\nfunction isToday(day) {\n  return sameDate(XDate(day), XDate.today());\n}\nfunction isGTE(a, b) {\n  return b.diffDays(a) > -1;\n}\nfunction isLTE(a, b) {\n  return a.diffDays(b) > -1;\n}\nfunction fromTo(a, b) {\n  var days = [];\n  var from = +a,\n    to = +b;\n  for (; from <= to; from = new XDate(from, true).addDays(1).getTime()) {\n    days.push(new XDate(from, true));\n  }\n  return days;\n}\nfunction month(xd) {\n  var year = xd.getFullYear(),\n    month = xd.getMonth();\n  var days = new Date(year, month + 1, 0).getDate();\n  var firstDay = new XDate(year, month, 1, 0, 0, 0, true);\n  var lastDay = new XDate(year, month, days, 0, 0, 0, true);\n  return fromTo(firstDay, lastDay);\n}\nfunction weekDayNames() {\n  var firstDayOfWeek = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var weekDaysNames = XDate.locales[XDate.defaultLocale].dayNamesShort;\n  var dayShift = firstDayOfWeek % 7;\n  if (dayShift) {\n    weekDaysNames = weekDaysNames.slice(dayShift).concat(weekDaysNames.slice(0, dayShift));\n  }\n  return weekDaysNames;\n}\nfunction page(xd, firstDayOfWeek, showSixWeeks) {\n  var days = month(xd);\n  var before = [],\n    after = [];\n  var fdow = (7 + firstDayOfWeek) % 7 || 7;\n  var ldow = (fdow + 6) % 7;\n  firstDayOfWeek = firstDayOfWeek || 0;\n  var from = days[0].clone();\n  var daysBefore = from.getDay();\n  if (from.getDay() !== fdow) {\n    from.addDays(-(from.getDay() + 7 - fdow) % 7);\n  }\n  var to = days[days.length - 1].clone();\n  var day = to.getDay();\n  if (day !== ldow) {\n    to.addDays((ldow + 7 - day) % 7);\n  }\n  var daysForSixWeeks = (daysBefore + days.length) / 6 >= 6;\n  if (showSixWeeks && !daysForSixWeeks) {\n    to.addDays(7);\n  }\n  if (isLTE(from, days[0])) {\n    before = fromTo(from, days[0]);\n  }\n  if (isGTE(to, days[days.length - 1])) {\n    after = fromTo(days[days.length - 1], to);\n  }\n  return before.concat(days.slice(1, days.length - 1), after);\n}\nfunction isDateNotInTheRange(minDate, maxDate, date) {\n  return minDate && !isGTE(date, minDate) || maxDate && !isLTE(date, maxDate);\n}\nfunction getWeekDates(date, firstDay, format) {\n  if (date && (0, _interface.parseDate)(date).valid()) {\n    var current = (0, _interface.parseDate)(date);\n    var daysArray = [current];\n    var dayOfTheWeek = current.getDay() - firstDay;\n    if (dayOfTheWeek < 0) {\n      dayOfTheWeek = 7 + dayOfTheWeek;\n    }\n    var newDate = current;\n    var index = dayOfTheWeek - 1;\n    while (index >= 0) {\n      newDate = (0, _interface.parseDate)(newDate).addDays(-1);\n      daysArray.unshift(newDate);\n      index -= 1;\n    }\n    newDate = current;\n    index = dayOfTheWeek + 1;\n    while (index < 7) {\n      newDate = (0, _interface.parseDate)(newDate).addDays(1);\n      daysArray.push(newDate);\n      index += 1;\n    }\n    if (format) {\n      return daysArray.map(function (d) {\n        return d.toString(format);\n      });\n    }\n    return daysArray;\n  }\n}\nmodule.exports = {\n  weekDayNames: weekDayNames,\n  sameMonth: sameMonth,\n  sameWeek: sameWeek,\n  sameDate: sameDate,\n  month: month,\n  page: page,\n  fromTo: fromTo,\n  isToday: isToday,\n  isLTE: isLTE,\n  isGTE: isGTE,\n  isDateNotInTheRange: isDateNotInTheRange,\n  getWeekDates: getWeekDates\n};","map":{"version":3,"names":["XDate","require","sameMonth","a","b","getFullYear","getMonth","sameDate","getDate","sameWeek","d1","d2","firstDayOfWeek","weekDates","getWeekDates","includes","isToday","day","today","isGTE","diffDays","isLTE","fromTo","days","from","to","addDays","getTime","push","month","xd","year","Date","firstDay","lastDay","weekDayNames","weekDaysNames","locales","defaultLocale","dayNamesShort","dayShift","slice","concat","page","showSixWeeks","before","after","fdow","ldow","clone","daysBefore","getDay","length","daysForSixWeeks","isDateNotInTheRange","minDate","maxDate","date","format","parseDate","valid","current","daysArray","dayOfTheWeek","newDate","index","unshift","map","d","toString","module","exports"],"sources":["E:/work/PK WORK/calendar-event-app-master/calendar-event-app-master/node_modules/react-native-calendars/src/dateutils.js"],"sourcesContent":["const XDate = require('xdate');\nimport {parseDate} from './interface';\n\nfunction sameMonth(a, b) {\n  return (\n    a instanceof XDate && b instanceof XDate && a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth()\n  );\n}\n\nfunction sameDate(a, b) {\n  return (\n    a instanceof XDate &&\n    b instanceof XDate &&\n    a.getFullYear() === b.getFullYear() &&\n    a.getMonth() === b.getMonth() &&\n    a.getDate() === b.getDate()\n  );\n}\n\nfunction sameWeek(d1, d2, firstDayOfWeek) {\n  const weekDates = getWeekDates(d1, firstDayOfWeek, 'yyyy-MM-dd');\n  return weekDates?.includes(d2);\n}\n\nfunction isToday(day) {\n  return sameDate(XDate(day), XDate.today());\n}\n\nfunction isGTE(a, b) {\n  return b.diffDays(a) > -1;\n}\n\nfunction isLTE(a, b) {\n  return a.diffDays(b) > -1;\n}\n\nfunction fromTo(a, b) {\n  const days = [];\n  let from = +a,\n    to = +b;\n  for (; from <= to; from = new XDate(from, true).addDays(1).getTime()) {\n    days.push(new XDate(from, true));\n  }\n  return days;\n}\n\nfunction month(xd) {\n  const year = xd.getFullYear(),\n    month = xd.getMonth();\n  const days = new Date(year, month + 1, 0).getDate();\n\n  const firstDay = new XDate(year, month, 1, 0, 0, 0, true);\n  const lastDay = new XDate(year, month, days, 0, 0, 0, true);\n\n  return fromTo(firstDay, lastDay);\n}\n\nfunction weekDayNames(firstDayOfWeek = 0) {\n  let weekDaysNames = XDate.locales[XDate.defaultLocale].dayNamesShort;\n  const dayShift = firstDayOfWeek % 7;\n  if (dayShift) {\n    weekDaysNames = weekDaysNames.slice(dayShift).concat(weekDaysNames.slice(0, dayShift));\n  }\n  return weekDaysNames;\n}\n\nfunction page(xd, firstDayOfWeek, showSixWeeks) {\n  const days = month(xd);\n  let before = [],\n    after = [];\n\n  const fdow = (7 + firstDayOfWeek) % 7 || 7;\n  const ldow = (fdow + 6) % 7;\n\n  firstDayOfWeek = firstDayOfWeek || 0;\n\n  const from = days[0].clone();\n  const daysBefore = from.getDay();\n\n  if (from.getDay() !== fdow) {\n    from.addDays(-(from.getDay() + 7 - fdow) % 7);\n  }\n\n  const to = days[days.length - 1].clone();\n  const day = to.getDay();\n  if (day !== ldow) {\n    to.addDays((ldow + 7 - day) % 7);\n  }\n\n  const daysForSixWeeks = (daysBefore + days.length) / 6 >= 6;\n\n  if (showSixWeeks && !daysForSixWeeks) {\n    to.addDays(7);\n  }\n\n  if (isLTE(from, days[0])) {\n    before = fromTo(from, days[0]);\n  }\n\n  if (isGTE(to, days[days.length - 1])) {\n    after = fromTo(days[days.length - 1], to);\n  }\n\n  return before.concat(days.slice(1, days.length - 1), after);\n}\n\nfunction isDateNotInTheRange(minDate, maxDate, date) {\n  return (minDate && !isGTE(date, minDate)) || (maxDate && !isLTE(date, maxDate));\n}\n\nfunction getWeekDates(date, firstDay, format) {\n  if (date && parseDate(date).valid()) {\n    const current = parseDate(date);\n    const daysArray = [current];\n    let dayOfTheWeek = current.getDay() - firstDay;\n    if (dayOfTheWeek < 0) {\n      // to handle firstDay > 0\n      dayOfTheWeek = 7 + dayOfTheWeek;\n    }\n\n    let newDate = current;\n    let index = dayOfTheWeek - 1;\n    while (index >= 0) {\n      newDate = parseDate(newDate).addDays(-1);\n      daysArray.unshift(newDate);\n      index -= 1;\n    }\n\n    newDate = current;\n    index = dayOfTheWeek + 1;\n    while (index < 7) {\n      newDate = parseDate(newDate).addDays(1);\n      daysArray.push(newDate);\n      index += 1;\n    }\n\n    if (format) {\n      return daysArray.map(d => d.toString(format));\n    }\n\n    return daysArray;\n  }\n}\n\nmodule.exports = {\n  weekDayNames,\n  sameMonth,\n  sameWeek,\n  sameDate,\n  month,\n  page,\n  fromTo,\n  isToday,\n  isLTE,\n  isGTE,\n  isDateNotInTheRange,\n  getWeekDates\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}