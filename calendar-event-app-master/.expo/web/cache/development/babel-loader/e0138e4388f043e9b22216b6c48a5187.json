{"ast":null,"code":"var XDate = require('xdate');\nfunction padNumber(n) {\n  if (n < 10) {\n    return '0' + n;\n  }\n  return n;\n}\nfunction xdateToData(d) {\n  var dateString = toMarkingFormat(d);\n  return {\n    year: d.getFullYear(),\n    month: d.getMonth() + 1,\n    day: d.getDate(),\n    timestamp: XDate(dateString, true).getTime(),\n    dateString: dateString\n  };\n}\nfunction parseDate(d) {\n  if (!d) {\n    return;\n  } else if (d.timestamp) {\n    return XDate(d.timestamp, true);\n  } else if (d instanceof XDate) {\n    return XDate(toMarkingFormat(d), true);\n  } else if (d.getTime) {\n    var dateString = d.getFullYear() + '-' + padNumber(d.getMonth() + 1) + '-' + padNumber(d.getDate());\n    return XDate(dateString, true);\n  } else if (d.year) {\n    var _dateString = d.year + '-' + padNumber(d.month) + '-' + padNumber(d.day);\n    return XDate(_dateString, true);\n  } else if (d) {\n    return XDate(d, true);\n  }\n}\nfunction toMarkingFormat(d) {\n  return d instanceof XDate && d.toString('yyyy-MM-dd');\n}\nmodule.exports = {\n  xdateToData: xdateToData,\n  parseDate: parseDate,\n  toMarkingFormat: toMarkingFormat\n};","map":{"version":3,"names":["XDate","require","padNumber","n","xdateToData","d","dateString","toMarkingFormat","year","getFullYear","month","getMonth","day","getDate","timestamp","getTime","parseDate","toString","module","exports"],"sources":["E:/work/PK WORK/calendar-event-app-master/calendar-event-app-master/node_modules/react-native-calendars/src/interface.js"],"sourcesContent":["const XDate = require('xdate');\n\nfunction padNumber(n) {\n  if (n < 10) {\n    return '0' + n;\n  }\n  return n;\n}\n\nfunction xdateToData(d) {\n  const dateString = toMarkingFormat(d);\n  return {\n    year: d.getFullYear(),\n    month: d.getMonth() + 1,\n    day: d.getDate(),\n    timestamp: XDate(dateString, true).getTime(),\n    dateString: dateString\n  };\n}\n\nfunction parseDate(d) {\n  if (!d) {\n    return;\n  } else if (d.timestamp) {\n    // conventional data timestamp\n    return XDate(d.timestamp, true);\n  } else if (d instanceof XDate) {\n    // xdate\n    return XDate(toMarkingFormat(d), true);\n  } else if (d.getTime) {\n    // javascript date\n    const dateString = d.getFullYear() + '-' + padNumber(d.getMonth() + 1) + '-' + padNumber(d.getDate());\n    return XDate(dateString, true);\n  } else if (d.year) {\n    const dateString = d.year + '-' + padNumber(d.month) + '-' + padNumber(d.day);\n    return XDate(dateString, true);\n  } else if (d) {\n    // timestamp number or date formatted as string\n    return XDate(d, true);\n  }\n}\n\nfunction toMarkingFormat(d) {\n  return d instanceof XDate && d.toString('yyyy-MM-dd');\n}\n\nmodule.exports = {\n  xdateToData,\n  parseDate,\n  toMarkingFormat\n};\n"],"mappings":"AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE9B,SAASC,SAAS,CAACC,CAAC,EAAE;EACpB,IAAIA,CAAC,GAAG,EAAE,EAAE;IACV,OAAO,GAAG,GAAGA,CAAC;EAChB;EACA,OAAOA,CAAC;AACV;AAEA,SAASC,WAAW,CAACC,CAAC,EAAE;EACtB,IAAMC,UAAU,GAAGC,eAAe,CAACF,CAAC,CAAC;EACrC,OAAO;IACLG,IAAI,EAAEH,CAAC,CAACI,WAAW,EAAE;IACrBC,KAAK,EAAEL,CAAC,CAACM,QAAQ,EAAE,GAAG,CAAC;IACvBC,GAAG,EAAEP,CAAC,CAACQ,OAAO,EAAE;IAChBC,SAAS,EAAEd,KAAK,CAACM,UAAU,EAAE,IAAI,CAAC,CAACS,OAAO,EAAE;IAC5CT,UAAU,EAAEA;EACd,CAAC;AACH;AAEA,SAASU,SAAS,CAACX,CAAC,EAAE;EACpB,IAAI,CAACA,CAAC,EAAE;IACN;EACF,CAAC,MAAM,IAAIA,CAAC,CAACS,SAAS,EAAE;IAEtB,OAAOd,KAAK,CAACK,CAAC,CAACS,SAAS,EAAE,IAAI,CAAC;EACjC,CAAC,MAAM,IAAIT,CAAC,YAAYL,KAAK,EAAE;IAE7B,OAAOA,KAAK,CAACO,eAAe,CAACF,CAAC,CAAC,EAAE,IAAI,CAAC;EACxC,CAAC,MAAM,IAAIA,CAAC,CAACU,OAAO,EAAE;IAEpB,IAAMT,UAAU,GAAGD,CAAC,CAACI,WAAW,EAAE,GAAG,GAAG,GAAGP,SAAS,CAACG,CAAC,CAACM,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGT,SAAS,CAACG,CAAC,CAACQ,OAAO,EAAE,CAAC;IACrG,OAAOb,KAAK,CAACM,UAAU,EAAE,IAAI,CAAC;EAChC,CAAC,MAAM,IAAID,CAAC,CAACG,IAAI,EAAE;IACjB,IAAMF,WAAU,GAAGD,CAAC,CAACG,IAAI,GAAG,GAAG,GAAGN,SAAS,CAACG,CAAC,CAACK,KAAK,CAAC,GAAG,GAAG,GAAGR,SAAS,CAACG,CAAC,CAACO,GAAG,CAAC;IAC7E,OAAOZ,KAAK,CAACM,WAAU,EAAE,IAAI,CAAC;EAChC,CAAC,MAAM,IAAID,CAAC,EAAE;IAEZ,OAAOL,KAAK,CAACK,CAAC,EAAE,IAAI,CAAC;EACvB;AACF;AAEA,SAASE,eAAe,CAACF,CAAC,EAAE;EAC1B,OAAOA,CAAC,YAAYL,KAAK,IAAIK,CAAC,CAACY,QAAQ,CAAC,YAAY,CAAC;AACvD;AAEAC,MAAM,CAACC,OAAO,GAAG;EACff,WAAW,EAAXA,WAAW;EACXY,SAAS,EAATA,SAAS;EACTT,eAAe,EAAfA;AACF,CAAC"},"metadata":{},"sourceType":"script"}