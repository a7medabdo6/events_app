{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forHorizontalIOS = forHorizontalIOS;\nexports.forVerticalIOS = forVerticalIOS;\nexports.forModalPresentationIOS = forModalPresentationIOS;\nexports.forFadeFromBottomAndroid = forFadeFromBottomAndroid;\nexports.forRevealFromBottomAndroid = forRevealFromBottomAndroid;\nexports.forScaleFromCenterAndroid = forScaleFromCenterAndroid;\nexports.forNoAnimation = forNoAnimation;\nvar _reactNative = require(\"react-native\");\nvar _reactNativeIphoneXHelper = require(\"react-native-iphone-x-helper\");\nvar _conditional = _interopRequireDefault(require(\"../utils/conditional\"));\nvar add = _reactNative.Animated.add,\n  multiply = _reactNative.Animated.multiply;\nfunction forHorizontalIOS(_ref) {\n  var current = _ref.current,\n    next = _ref.next,\n    inverted = _ref.inverted,\n    screen = _ref.layouts.screen;\n  var translateFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.width, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var translateUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.width * -0.3],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp'\n  });\n  var shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp'\n  });\n  return {\n    cardStyle: {\n      transform: [{\n        translateX: translateFocused\n      }, {\n        translateX: translateUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    },\n    shadowStyle: {\n      shadowOpacity: shadowOpacity\n    }\n  };\n}\nfunction forVerticalIOS(_ref2) {\n  var current = _ref2.current,\n    inverted = _ref2.inverted,\n    screen = _ref2.layouts.screen;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  return {\n    cardStyle: {\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}\nfunction forModalPresentationIOS(_ref3) {\n  var index = _ref3.index,\n    current = _ref3.current,\n    next = _ref3.next,\n    inverted = _ref3.inverted,\n    screen = _ref3.layouts.screen,\n    insets = _ref3.insets;\n  var isLandscape = screen.width > screen.height;\n  var topOffset = isLandscape ? 0 : 10;\n  var statusBarHeight = insets.top;\n  var aspectRatio = screen.height / screen.width;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var translateY = multiply(progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [screen.height, index === 0 ? 0 : topOffset, (index === 0 ? statusBarHeight : 0) - topOffset * aspectRatio]\n  }), inverted);\n  var overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1]\n  });\n  var scale = isLandscape ? 1 : progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [1, 1, screen.width ? 1 - topOffset * 2 / screen.width : 1]\n  });\n  var borderRadius = isLandscape ? 0 : index === 0 ? progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0, (0, _reactNativeIphoneXHelper.isIphoneX)() ? 38 : 0, 10]\n  }) : 10;\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      marginTop: index === 0 ? 0 : statusBarHeight,\n      marginBottom: index === 0 ? 0 : topOffset,\n      transform: [{\n        translateY: translateY\n      }, {\n        scale: scale\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nfunction forFadeFromBottomAndroid(_ref4) {\n  var current = _ref4.current,\n    inverted = _ref4.inverted,\n    screen = _ref4.layouts.screen,\n    closing = _ref4.closing;\n  var translateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * 0.08, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var opacity = (0, _conditional.default)(closing, current.progress, current.progress.interpolate({\n    inputRange: [0, 0.5, 0.9, 1],\n    outputRange: [0, 0.25, 0.7, 1]\n  }));\n  return {\n    cardStyle: {\n      opacity: opacity,\n      transform: [{\n        translateY: translateY\n      }]\n    }\n  };\n}\nfunction forRevealFromBottomAndroid(_ref5) {\n  var current = _ref5.current,\n    next = _ref5.next,\n    inverted = _ref5.inverted,\n    screen = _ref5.layouts.screen;\n  var containerTranslateY = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var cardTranslateYFocused = multiply(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [screen.height * (95.9 / 100) * -1, 0],\n    extrapolate: 'clamp'\n  }), inverted);\n  var cardTranslateYUnfocused = next ? multiply(next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, screen.height * (2 / 100) * -1],\n    extrapolate: 'clamp'\n  }), inverted) : 0;\n  var overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp'\n  });\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{\n        translateY: containerTranslateY\n      }]\n    },\n    cardStyle: {\n      transform: [{\n        translateY: cardTranslateYFocused\n      }, {\n        translateY: cardTranslateYUnfocused\n      }]\n    },\n    overlayStyle: {\n      opacity: overlayOpacity\n    }\n  };\n}\nfunction forScaleFromCenterAndroid(_ref6) {\n  var current = _ref6.current,\n    next = _ref6.next,\n    closing = _ref6.closing;\n  var progress = add(current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }), next ? next.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  }) : 0);\n  var opacity = progress.interpolate({\n    inputRange: [0, 0.75, 0.875, 1, 1.0825, 1.2075, 2],\n    outputRange: [0, 0, 1, 1, 1, 1, 0]\n  });\n  var scale = (0, _conditional.default)(closing, current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0.9, 1],\n    extrapolate: 'clamp'\n  }), progress.interpolate({\n    inputRange: [0, 1, 2],\n    outputRange: [0.85, 1, 1.1]\n  }));\n  return {\n    containerStyle: {\n      opacity: opacity,\n      transform: [{\n        scale: scale\n      }]\n    }\n  };\n}\nfunction forNoAnimation() {\n  return {};\n}","map":{"version":3,"mappings":"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","names":["add","Animated","multiply","forHorizontalIOS","current","next","inverted","screen","layouts","translateFocused","progress","interpolate","inputRange","outputRange","width","extrapolate","translateUnfocused","overlayOpacity","shadowOpacity","cardStyle","transform","translateX","overlayStyle","opacity","shadowStyle","forVerticalIOS","translateY","height","forModalPresentationIOS","index","insets","isLandscape","topOffset","statusBarHeight","top","aspectRatio","scale","borderRadius","isIphoneX","overflow","borderTopLeftRadius","borderTopRightRadius","marginTop","marginBottom","forFadeFromBottomAndroid","closing","conditional","forRevealFromBottomAndroid","containerTranslateY","cardTranslateYFocused","cardTranslateYUnfocused","containerStyle","forScaleFromCenterAndroid","forNoAnimation"],"sources":["CardStyleInterpolators.tsx"],"sourcesContent":["import { Animated } from 'react-native';\nimport { isIphoneX } from 'react-native-iphone-x-helper';\nimport conditional from '../utils/conditional';\nimport type {\n  StackCardInterpolationProps,\n  StackCardInterpolatedStyle,\n} from '../types';\n\nconst { add, multiply } = Animated;\n\n/**\n * Standard iOS-style slide in from the right.\n */\nexport function forHorizontalIOS({\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateFocused = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.width, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const translateUnfocused = next\n    ? multiply(\n        next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, screen.width * -0.3],\n          extrapolate: 'clamp',\n        }),\n        inverted\n      )\n    : 0;\n\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.07],\n    extrapolate: 'clamp',\n  });\n\n  const shadowOpacity = current.progress.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 0.3],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    cardStyle: {\n      transform: [\n        // Translation for the animation of the current card\n        { translateX: translateFocused },\n        // Translation for the animation of the card on top of this\n        { translateX: translateUnfocused },\n      ],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n    shadowStyle: { shadowOpacity },\n  };\n}\n\n/**\n * Standard iOS-style slide in from the bottom (used for modals).\n */\nexport function forVerticalIOS({\n  current,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  return {\n    cardStyle: {\n      transform: [\n        // Translation for the animation of the current card\n        { translateY },\n      ],\n    },\n  };\n}\n\n/**\n * Standard iOS-style modal animation in iOS 13.\n */\nexport function forModalPresentationIOS({\n  index,\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n  insets,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const isLandscape = screen.width > screen.height;\n  const topOffset = isLandscape ? 0 : 10;\n  const statusBarHeight = insets.top;\n  const aspectRatio = screen.height / screen.width;\n\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const translateY = multiply(\n    progress.interpolate({\n      inputRange: [0, 1, 2],\n      outputRange: [\n        screen.height,\n        index === 0 ? 0 : topOffset,\n        (index === 0 ? statusBarHeight : 0) - topOffset * aspectRatio,\n      ],\n    }),\n    inverted\n  );\n\n  const overlayOpacity = progress.interpolate({\n    inputRange: [0, 1, 1.0001, 2],\n    outputRange: [0, 0.3, 1, 1],\n  });\n\n  const scale = isLandscape\n    ? 1\n    : progress.interpolate({\n        inputRange: [0, 1, 2],\n        outputRange: [\n          1,\n          1,\n          screen.width ? 1 - (topOffset * 2) / screen.width : 1,\n        ],\n      });\n\n  const borderRadius = isLandscape\n    ? 0\n    : index === 0\n    ? progress.interpolate({\n        inputRange: [0, 1, 1.0001, 2],\n        outputRange: [0, 0, isIphoneX() ? 38 : 0, 10],\n      })\n    : 10;\n\n  return {\n    cardStyle: {\n      overflow: 'hidden',\n      borderTopLeftRadius: borderRadius,\n      borderTopRightRadius: borderRadius,\n      marginTop: index === 0 ? 0 : statusBarHeight,\n      marginBottom: index === 0 ? 0 : topOffset,\n      transform: [{ translateY }, { scale }],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n  };\n}\n\n/**\n * Standard Android-style fade in from the bottom for Android Oreo.\n */\nexport function forFadeFromBottomAndroid({\n  current,\n  inverted,\n  layouts: { screen },\n  closing,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const translateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height * 0.08, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const opacity = conditional(\n    closing,\n    current.progress,\n    current.progress.interpolate({\n      inputRange: [0, 0.5, 0.9, 1],\n      outputRange: [0, 0.25, 0.7, 1],\n    })\n  );\n\n  return {\n    cardStyle: {\n      opacity,\n      transform: [{ translateY }],\n    },\n  };\n}\n\n/**\n * Standard Android-style reveal from the bottom for Android Pie.\n */\nexport function forRevealFromBottomAndroid({\n  current,\n  next,\n  inverted,\n  layouts: { screen },\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const containerTranslateY = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const cardTranslateYFocused = multiply(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [screen.height * (95.9 / 100) * -1, 0],\n      extrapolate: 'clamp',\n    }),\n    inverted\n  );\n\n  const cardTranslateYUnfocused = next\n    ? multiply(\n        next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, screen.height * (2 / 100) * -1],\n          extrapolate: 'clamp',\n        }),\n        inverted\n      )\n    : 0;\n\n  const overlayOpacity = current.progress.interpolate({\n    inputRange: [0, 0.36, 1],\n    outputRange: [0, 0.1, 0.1],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    containerStyle: {\n      overflow: 'hidden',\n      transform: [{ translateY: containerTranslateY }],\n    },\n    cardStyle: {\n      transform: [\n        { translateY: cardTranslateYFocused },\n        { translateY: cardTranslateYUnfocused },\n      ],\n    },\n    overlayStyle: { opacity: overlayOpacity },\n  };\n}\n\n/**\n * Standard Android-style reveal from the bottom for Android Q.\n */\nexport function forScaleFromCenterAndroid({\n  current,\n  next,\n  closing,\n}: StackCardInterpolationProps): StackCardInterpolatedStyle {\n  const progress = add(\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    }),\n    next\n      ? next.progress.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp',\n        })\n      : 0\n  );\n\n  const opacity = progress.interpolate({\n    inputRange: [0, 0.75, 0.875, 1, 1.0825, 1.2075, 2],\n    outputRange: [0, 0, 1, 1, 1, 1, 0],\n  });\n\n  const scale = conditional(\n    closing,\n    current.progress.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.9, 1],\n      extrapolate: 'clamp',\n    }),\n    progress.interpolate({\n      inputRange: [0, 1, 2],\n      outputRange: [0.85, 1, 1.1],\n    })\n  );\n\n  return {\n    containerStyle: {\n      opacity,\n      transform: [{ scale }],\n    },\n  };\n}\n\nexport function forNoAnimation(): StackCardInterpolatedStyle {\n  return {};\n}\n"]},"metadata":{},"sourceType":"script"}