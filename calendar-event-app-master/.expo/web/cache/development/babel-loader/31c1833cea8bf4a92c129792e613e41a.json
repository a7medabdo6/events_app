{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _findIndex = _interopRequireDefault(require(\"lodash/findIndex\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _xdate = _interopRequireDefault(require(\"xdate\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _componentUpdater = require(\"../componentUpdater\");\nvar _interface = require(\"../interface\");\nvar _dateutils = require(\"../dateutils\");\nvar _constants = _interopRequireDefault(require(\"../commons/constants\"));\nvar _hooks = require(\"../hooks\");\nvar _style = _interopRequireDefault(require(\"./style\"));\nvar _calendar = _interopRequireDefault(require(\"../calendar\"));\nvar _item = _interopRequireDefault(require(\"./item\"));\nvar _index = _interopRequireDefault(require(\"../calendar/header/index\"));\nvar _this = this,\n  _jsxFileName = \"E:\\\\work\\\\PK WORK\\\\calendar-event-app-master\\\\calendar-event-app-master\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar-list\\\\index.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar CALENDAR_WIDTH = _constants.default.screenWidth;\nvar CALENDAR_HEIGHT = 360;\nvar PAST_SCROLL_RANGE = 50;\nvar FUTURE_SCROLL_RANGE = 50;\nvar CalendarList = function CalendarList(props, ref) {\n  (0, _react.useImperativeHandle)(ref, function () {\n    return {\n      scrollToDay: function scrollToDay(date, offset, animated) {\n        _scrollToDay(date, offset, animated);\n      },\n      scrollToMonth: function scrollToMonth(date) {\n        _scrollToMonth(date);\n      }\n    };\n  });\n  var theme = props.theme,\n    current = props.current,\n    firstDay = props.firstDay,\n    markedDates = props.markedDates,\n    headerStyle = props.headerStyle,\n    onMonthChange = props.onMonthChange,\n    onVisibleMonthsChange = props.onVisibleMonthsChange,\n    _props$pastScrollRang = props.pastScrollRange,\n    pastScrollRange = _props$pastScrollRang === void 0 ? PAST_SCROLL_RANGE : _props$pastScrollRang,\n    _props$futureScrollRa = props.futureScrollRange,\n    futureScrollRange = _props$futureScrollRa === void 0 ? FUTURE_SCROLL_RANGE : _props$futureScrollRa,\n    _props$calendarHeight = props.calendarHeight,\n    calendarHeight = _props$calendarHeight === void 0 ? CALENDAR_HEIGHT : _props$calendarHeight,\n    _props$calendarWidth = props.calendarWidth,\n    calendarWidth = _props$calendarWidth === void 0 ? CALENDAR_WIDTH : _props$calendarWidth,\n    calendarStyle = props.calendarStyle,\n    _props$animateScroll = props.animateScroll,\n    animateScroll = _props$animateScroll === void 0 ? false : _props$animateScroll,\n    _props$showScrollIndi = props.showScrollIndicator,\n    showScrollIndicator = _props$showScrollIndi === void 0 ? false : _props$showScrollIndi,\n    staticHeader = props.staticHeader,\n    testID = props.testID,\n    propsStyle = props.style,\n    onLayout = props.onLayout,\n    removeClippedSubviews = props.removeClippedSubviews,\n    _props$horizontal = props.horizontal,\n    horizontal = _props$horizontal === void 0 ? false : _props$horizontal,\n    pagingEnabled = props.pagingEnabled,\n    _props$scrollEnabled = props.scrollEnabled,\n    scrollEnabled = _props$scrollEnabled === void 0 ? true : _props$scrollEnabled,\n    _props$nestedScrollEn = props.nestedScrollEnabled,\n    nestedScrollEnabled = _props$nestedScrollEn === void 0 ? true : _props$nestedScrollEn,\n    _props$scrollsToTop = props.scrollsToTop,\n    scrollsToTop = _props$scrollsToTop === void 0 ? false : _props$scrollsToTop,\n    _props$keyExtractor = props.keyExtractor,\n    keyExtractor = _props$keyExtractor === void 0 ? function (_, index) {\n      return String(index);\n    } : _props$keyExtractor,\n    keyboardShouldPersistTaps = props.keyboardShouldPersistTaps,\n    onScrollBeginDrag = props.onScrollBeginDrag,\n    onScrollEndDrag = props.onScrollEndDrag,\n    onMomentumScrollBegin = props.onMomentumScrollBegin,\n    onMomentumScrollEnd = props.onMomentumScrollEnd,\n    onEndReachedThreshold = props.onEndReachedThreshold,\n    onEndReached = props.onEndReached;\n  var calendarProps = (0, _componentUpdater.extractCalendarProps)(props);\n  var headerProps = (0, _componentUpdater.extractHeaderProps)(props);\n  var calendarSize = horizontal ? calendarWidth : calendarHeight;\n  var _useState = (0, _react.useState)((0, _interface.parseDate)(current)),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    currentMonth = _useState2[0],\n    setCurrentMonth = _useState2[1];\n  var style = (0, _react.useRef)((0, _style.default)(theme));\n  var list = (0, _react.useRef)();\n  var range = (0, _react.useRef)(horizontal ? 1 : 3);\n  var initialDate = (0, _react.useRef)((0, _interface.parseDate)(current) || new _xdate.default());\n  var visibleMonth = (0, _react.useRef)(currentMonth);\n  var items = (0, _react.useMemo)(function () {\n    var months = [];\n    for (var i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n      var _initialDate$current;\n      var rangeDate = (_initialDate$current = initialDate.current) == null ? void 0 : _initialDate$current.clone().addMonths(i - pastScrollRange, true);\n      months.push(rangeDate);\n    }\n    return months;\n  }, [pastScrollRange, futureScrollRange]);\n  var staticHeaderStyle = (0, _react.useMemo)(function () {\n    return [style.current.staticHeader, headerStyle];\n  }, [headerStyle]);\n  var listStyle = (0, _react.useMemo)(function () {\n    return [style.current.container, propsStyle];\n  }, [propsStyle]);\n  var initialDateIndex = (0, _react.useMemo)(function () {\n    return (0, _findIndex.default)(items, function (item) {\n      var _initialDate$current2;\n      return item.toString() === ((_initialDate$current2 = initialDate.current) == null ? void 0 : _initialDate$current2.toString());\n    });\n  }, [items]);\n  (0, _react.useEffect)(function () {\n    if (current) {\n      _scrollToMonth(new _xdate.default(current));\n    }\n  }, [current]);\n  (0, _hooks.useDidUpdate)(function () {\n    var currMont = currentMonth == null ? void 0 : currentMonth.clone();\n    if (currMont) {\n      var data = (0, _interface.xdateToData)(currMont);\n      onMonthChange == null ? void 0 : onMonthChange(data);\n      onVisibleMonthsChange == null ? void 0 : onVisibleMonthsChange([data]);\n    }\n  }, [currentMonth]);\n  var _scrollToDay = function _scrollToDay(date, offset, animated) {\n    var _initialDate$current3;\n    var scrollTo = (0, _interface.parseDate)(date);\n    var diffMonths = Math.round(initialDate == null ? void 0 : (_initialDate$current3 = initialDate.current) == null ? void 0 : _initialDate$current3.clone().setDate(1).diffMonths(scrollTo == null ? void 0 : scrollTo.clone().setDate(1)));\n    var scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize + (offset || 0);\n    if (!horizontal) {\n      var week = 0;\n      var days = (0, _dateutils.page)(scrollTo, firstDay);\n      for (var i = 0; i < days.length; i++) {\n        week = Math.floor(i / 7);\n        if ((0, _dateutils.sameDate)(days[i], scrollTo)) {\n          scrollAmount += 46 * week;\n          break;\n        }\n      }\n    }\n    if (scrollAmount !== 0) {\n      var _list$current;\n      list == null ? void 0 : (_list$current = list.current) == null ? void 0 : _list$current.scrollToOffset({\n        offset: scrollAmount,\n        animated: animated\n      });\n    }\n  };\n  var _scrollToMonth = (0, _react.useCallback)(function (date) {\n    var _initialDate$current4;\n    var scrollTo = (0, _interface.parseDate)(date);\n    var diffMonths = Math.round(initialDate == null ? void 0 : (_initialDate$current4 = initialDate.current) == null ? void 0 : _initialDate$current4.clone().setDate(1).diffMonths(scrollTo == null ? void 0 : scrollTo.clone().setDate(1)));\n    var scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize;\n    if (scrollAmount !== 0) {\n      var _list$current2;\n      list == null ? void 0 : (_list$current2 = list.current) == null ? void 0 : _list$current2.scrollToOffset({\n        offset: scrollAmount,\n        animated: animateScroll\n      });\n    }\n  }, [calendarSize]);\n  var addMonth = (0, _react.useCallback)(function (count) {\n    var day = currentMonth == null ? void 0 : currentMonth.clone().addMonths(count, true);\n    if ((0, _dateutils.sameMonth)(day, currentMonth)) {\n      return;\n    }\n    _scrollToMonth(day);\n    setCurrentMonth(day);\n  }, [currentMonth, _scrollToMonth]);\n  var getMarkedDatesForItem = (0, _react.useCallback)(function (item) {\n    if (markedDates && item) {\n      for (var _i = 0, _Object$entries = Object.entries(markedDates); _i < _Object$entries.length; _i++) {\n        var _ref = _Object$entries[_i];\n        var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n        var key = _ref2[0];\n        var _ = _ref2[1];\n        if ((0, _dateutils.sameMonth)(new _xdate.default(key), new _xdate.default(item))) {\n          return markedDates;\n        }\n      }\n    }\n  }, [markedDates]);\n  var getItemLayout = (0, _react.useCallback)(function (_, index) {\n    return {\n      length: calendarSize,\n      offset: calendarSize * index,\n      index: index\n    };\n  }, []);\n  var isDateInRange = (0, _react.useCallback)(function (date) {\n    for (var i = -range.current; i <= range.current; i++) {\n      var newMonth = currentMonth == null ? void 0 : currentMonth.clone().addMonths(i, true);\n      if ((0, _dateutils.sameMonth)(date, newMonth)) {\n        return true;\n      }\n    }\n    return false;\n  }, [currentMonth]);\n  var renderItem = (0, _react.useCallback)(function (_ref3) {\n    var item = _ref3.item;\n    var dateString = (0, _interface.toMarkingFormat)(item);\n    var _dateString$split = dateString.split('-'),\n      _dateString$split2 = (0, _slicedToArray2.default)(_dateString$split, 2),\n      year = _dateString$split2[0],\n      month = _dateString$split2[1];\n    var testId = testID + \".item_\" + year + \"-\" + month;\n    return _react.default.createElement(_item.default, (0, _extends2.default)({}, calendarProps, {\n      testID: testId,\n      markedDates: getMarkedDatesForItem(item),\n      item: item,\n      style: calendarStyle,\n      horizontal: horizontal,\n      calendarWidth: calendarWidth,\n      calendarHeight: calendarHeight,\n      scrollToMonth: _scrollToMonth,\n      visible: isDateInRange(item),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }));\n  }, [horizontal, calendarStyle, calendarWidth, testID, getMarkedDatesForItem, isDateInRange, calendarProps]);\n  var renderStaticHeader = function renderStaticHeader() {\n    if (staticHeader && horizontal) {\n      return _react.default.createElement(_index.default, (0, _extends2.default)({}, headerProps, {\n        testID: testID + \".staticHeader\",\n        style: staticHeaderStyle,\n        month: currentMonth,\n        addMonth: addMonth,\n        accessibilityElementsHidden: true,\n        importantForAccessibility: 'no-hide-descendants',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }));\n    }\n  };\n  var viewabilityConfig = (0, _react.useRef)({\n    viewAreaCoveragePercentThreshold: 20\n  });\n  var onViewableItemsChanged = (0, _react.useCallback)(function (_ref4) {\n    var _viewableItems$;\n    var viewableItems = _ref4.viewableItems;\n    var newVisibleMonth = (0, _interface.parseDate)((_viewableItems$ = viewableItems[0]) == null ? void 0 : _viewableItems$.item);\n    if (!(0, _dateutils.sameDate)(visibleMonth == null ? void 0 : visibleMonth.current, newVisibleMonth)) {\n      visibleMonth.current = newVisibleMonth;\n      setCurrentMonth(visibleMonth.current);\n    }\n  }, []);\n  var viewabilityConfigCallbackPairs = (0, _react.useRef)([{\n    viewabilityConfig: viewabilityConfig.current,\n    onViewableItemsChanged: onViewableItemsChanged\n  }]);\n  return _react.default.createElement(_reactNative.View, {\n    style: style.current.flatListContainer,\n    testID: testID,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.FlatList, {\n    ref: list,\n    style: listStyle,\n    showsVerticalScrollIndicator: showScrollIndicator,\n    showsHorizontalScrollIndicator: showScrollIndicator,\n    data: items,\n    renderItem: renderItem,\n    getItemLayout: getItemLayout,\n    initialNumToRender: range.current,\n    initialScrollIndex: initialDateIndex,\n    viewabilityConfigCallbackPairs: viewabilityConfigCallbackPairs.current,\n    testID: testID + \".list\",\n    onLayout: onLayout,\n    removeClippedSubviews: removeClippedSubviews,\n    pagingEnabled: pagingEnabled,\n    scrollEnabled: scrollEnabled,\n    scrollsToTop: scrollsToTop,\n    horizontal: horizontal,\n    keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n    keyExtractor: keyExtractor,\n    onEndReachedThreshold: onEndReachedThreshold,\n    onEndReached: onEndReached,\n    nestedScrollEnabled: nestedScrollEnabled,\n    onMomentumScrollBegin: onMomentumScrollBegin,\n    onMomentumScrollEnd: onMomentumScrollEnd,\n    onScrollBeginDrag: onScrollBeginDrag,\n    onScrollEndDrag: onScrollEndDrag,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }), renderStaticHeader());\n};\nvar _default = (0, _react.forwardRef)(CalendarList);\nexports.default = _default;\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = (0, _extends2.default)({}, _calendar.default.propTypes, {\n  pastScrollRange: _propTypes.default.number,\n  futureScrollRange: _propTypes.default.number,\n  calendarWidth: _propTypes.default.number,\n  calendarHeight: _propTypes.default.number,\n  calendarStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  staticHeader: _propTypes.default.bool,\n  showScrollIndicator: _propTypes.default.bool,\n  animateScroll: _propTypes.default.bool,\n  scrollEnabled: _propTypes.default.bool,\n  scrollsToTop: _propTypes.default.bool,\n  pagingEnabled: _propTypes.default.bool,\n  horizontal: _propTypes.default.bool,\n  keyboardShouldPersistTaps: _propTypes.default.oneOf(['never', 'always', 'handled']),\n  keyExtractor: _propTypes.default.func,\n  onEndReachedThreshold: _propTypes.default.number,\n  onEndReached: _propTypes.default.func,\n  nestedScrollEnabled: _propTypes.default.bool\n});","map":{"version":3,"names":["CALENDAR_WIDTH","constants","screenWidth","CALENDAR_HEIGHT","PAST_SCROLL_RANGE","FUTURE_SCROLL_RANGE","CalendarList","props","ref","useImperativeHandle","scrollToDay","date","offset","animated","scrollToMonth","theme","current","firstDay","markedDates","headerStyle","onMonthChange","onVisibleMonthsChange","pastScrollRange","futureScrollRange","calendarHeight","calendarWidth","calendarStyle","animateScroll","showScrollIndicator","staticHeader","testID","propsStyle","style","onLayout","removeClippedSubviews","horizontal","pagingEnabled","scrollEnabled","nestedScrollEnabled","scrollsToTop","keyExtractor","_","index","String","keyboardShouldPersistTaps","onScrollBeginDrag","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","onEndReachedThreshold","onEndReached","calendarProps","extractCalendarProps","headerProps","extractHeaderProps","calendarSize","useState","parseDate","currentMonth","setCurrentMonth","useRef","styleConstructor","list","range","initialDate","XDate","visibleMonth","items","useMemo","months","i","rangeDate","clone","addMonths","push","staticHeaderStyle","listStyle","container","initialDateIndex","findIndex","item","toString","useEffect","useDidUpdate","currMont","data","xdateToData","scrollTo","diffMonths","Math","round","setDate","scrollAmount","week","days","page","length","floor","sameDate","scrollToOffset","useCallback","addMonth","count","day","sameMonth","getMarkedDatesForItem","Object","entries","key","getItemLayout","isDateInRange","newMonth","renderItem","dateString","toMarkingFormat","split","year","month","testId","renderStaticHeader","viewabilityConfig","viewAreaCoveragePercentThreshold","onViewableItemsChanged","viewableItems","newVisibleMonth","viewabilityConfigCallbackPairs","flatListContainer","forwardRef","displayName","propTypes","Calendar","PropTypes","number","oneOfType","object","array","bool","oneOf","func"],"sources":["E:/work/PK WORK/calendar-event-app-master/calendar-event-app-master/node_modules/react-native-calendars/src/calendar-list/index.js"],"sourcesContent":["import findIndex from 'lodash/findIndex';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { forwardRef, useImperativeHandle, useRef, useEffect, useState, useCallback, useMemo } from 'react';\nimport { FlatList, View } from 'react-native';\nimport { extractHeaderProps, extractCalendarProps } from '../componentUpdater';\nimport { xdateToData, parseDate, toMarkingFormat } from '../interface';\nimport { page, sameDate, sameMonth } from '../dateutils';\nimport constants from '../commons/constants';\nimport { useDidUpdate } from '../hooks';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport CalendarListItem from './item';\nimport CalendarHeader from '../calendar/header/index';\nconst CALENDAR_WIDTH = constants.screenWidth;\nconst CALENDAR_HEIGHT = 360;\nconst PAST_SCROLL_RANGE = 50;\nconst FUTURE_SCROLL_RANGE = 50;\n/**\n * @description: Calendar List component for both vertical and horizontal calendars\n * @extends: Calendar\n * @extendslink: docs/Calendar\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendarsList.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/calendar-list.gif\n */\nconst CalendarList = (props, ref) => {\n    useImperativeHandle(ref, () => ({\n        scrollToDay: (date, offset, animated) => {\n            scrollToDay(date, offset, animated);\n        },\n        scrollToMonth: (date) => {\n            scrollToMonth(date);\n        }\n    }));\n    const { \n    /** Calendar props */\n    theme, current, firstDay, markedDates, headerStyle, onMonthChange, onVisibleMonthsChange, \n    /** CalendarList props */\n    pastScrollRange = PAST_SCROLL_RANGE, futureScrollRange = FUTURE_SCROLL_RANGE, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, calendarStyle, animateScroll = false, showScrollIndicator = false, staticHeader, \n    /** View props */\n    testID, style: propsStyle, onLayout, removeClippedSubviews, \n    /** ScrollView props */\n    horizontal = false, pagingEnabled, scrollEnabled = true, nestedScrollEnabled = true, scrollsToTop = false, keyExtractor = (_, index) => String(index), keyboardShouldPersistTaps, onScrollBeginDrag, onScrollEndDrag, onMomentumScrollBegin, onMomentumScrollEnd, \n    /** FlatList props */\n    onEndReachedThreshold, onEndReached } = props;\n    const calendarProps = extractCalendarProps(props);\n    const headerProps = extractHeaderProps(props);\n    const calendarSize = horizontal ? calendarWidth : calendarHeight;\n    const [currentMonth, setCurrentMonth] = useState(parseDate(current));\n    const style = useRef(styleConstructor(theme));\n    const list = useRef();\n    const range = useRef(horizontal ? 1 : 3);\n    const initialDate = useRef(parseDate(current) || new XDate());\n    const visibleMonth = useRef(currentMonth);\n    const items = useMemo(() => {\n        const months = [];\n        for (let i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n            const rangeDate = initialDate.current?.clone().addMonths(i - pastScrollRange, true);\n            months.push(rangeDate);\n        }\n        return months;\n    }, [pastScrollRange, futureScrollRange]);\n    const staticHeaderStyle = useMemo(() => {\n        return [style.current.staticHeader, headerStyle];\n    }, [headerStyle]);\n    const listStyle = useMemo(() => {\n        return [style.current.container, propsStyle];\n    }, [propsStyle]);\n    const initialDateIndex = useMemo(() => {\n        return findIndex(items, function (item) {\n            return item.toString() === initialDate.current?.toString();\n        });\n    }, [items]);\n    useEffect(() => {\n        if (current) {\n            scrollToMonth(new XDate(current));\n        }\n    }, [current]);\n    useDidUpdate(() => {\n        const currMont = currentMonth?.clone();\n        if (currMont) {\n            const data = xdateToData(currMont);\n            onMonthChange?.(data);\n            onVisibleMonthsChange?.([data]);\n        }\n    }, [currentMonth]);\n    const scrollToDay = (date, offset, animated) => {\n        const scrollTo = parseDate(date);\n        const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n        let scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize + (offset || 0);\n        if (!horizontal) {\n            let week = 0;\n            const days = page(scrollTo, firstDay);\n            for (let i = 0; i < days.length; i++) {\n                week = Math.floor(i / 7);\n                if (sameDate(days[i], scrollTo)) {\n                    scrollAmount += 46 * week;\n                    break;\n                }\n            }\n        }\n        if (scrollAmount !== 0) {\n            // @ts-expect-error\n            list?.current?.scrollToOffset({ offset: scrollAmount, animated });\n        }\n    };\n    const scrollToMonth = useCallback((date) => {\n        const scrollTo = parseDate(date);\n        const diffMonths = Math.round(initialDate?.current?.clone().setDate(1).diffMonths(scrollTo?.clone().setDate(1)));\n        const scrollAmount = calendarSize * pastScrollRange + diffMonths * calendarSize;\n        if (scrollAmount !== 0) {\n            // @ts-expect-error\n            list?.current?.scrollToOffset({ offset: scrollAmount, animated: animateScroll });\n        }\n    }, [calendarSize]);\n    const addMonth = useCallback((count) => {\n        const day = currentMonth?.clone().addMonths(count, true);\n        if (sameMonth(day, currentMonth)) {\n            return;\n        }\n        scrollToMonth(day);\n        setCurrentMonth(day);\n    }, [currentMonth, scrollToMonth]);\n    const getMarkedDatesForItem = useCallback((item) => {\n        if (markedDates && item) {\n            for (const [key, _] of Object.entries(markedDates)) {\n                if (sameMonth(new XDate(key), new XDate(item))) {\n                    return markedDates;\n                }\n            }\n        }\n    }, [markedDates]);\n    const getItemLayout = useCallback((_, index) => {\n        return {\n            length: calendarSize,\n            offset: calendarSize * index,\n            index\n        };\n    }, []);\n    const isDateInRange = useCallback((date) => {\n        for (let i = -range.current; i <= range.current; i++) {\n            const newMonth = currentMonth?.clone().addMonths(i, true);\n            if (sameMonth(date, newMonth)) {\n                return true;\n            }\n        }\n        return false;\n    }, [currentMonth]);\n    const renderItem = useCallback(({ item }) => {\n        const dateString = toMarkingFormat(item);\n        const [year, month] = dateString.split('-');\n        const testId = `${testID}.item_${year}-${month}`;\n        return (<CalendarListItem {...calendarProps} testID={testId} markedDates={getMarkedDatesForItem(item)} item={item} style={calendarStyle} \n        // @ts-expect-error - type mismatch - ScrollView's 'horizontal' is nullable\n        horizontal={horizontal} calendarWidth={calendarWidth} calendarHeight={calendarHeight} scrollToMonth={scrollToMonth} visible={isDateInRange(item)}/>);\n    }, [horizontal, calendarStyle, calendarWidth, testID, getMarkedDatesForItem, isDateInRange, calendarProps]);\n    const renderStaticHeader = () => {\n        if (staticHeader && horizontal) {\n            return (<CalendarHeader {...headerProps} testID={`${testID}.staticHeader`} style={staticHeaderStyle} month={currentMonth} addMonth={addMonth} accessibilityElementsHidden={true} // iOS\n             importantForAccessibility={'no-hide-descendants'} // Android\n            />);\n        }\n    };\n    /** Viewable month */\n    const viewabilityConfig = useRef({\n        viewAreaCoveragePercentThreshold: 20\n    });\n    const onViewableItemsChanged = useCallback(({ viewableItems }) => {\n        const newVisibleMonth = parseDate(viewableItems[0]?.item);\n        if (!sameDate(visibleMonth?.current, newVisibleMonth)) {\n            visibleMonth.current = newVisibleMonth;\n            setCurrentMonth(visibleMonth.current);\n        }\n    }, []);\n    const viewabilityConfigCallbackPairs = useRef([\n        {\n            viewabilityConfig: viewabilityConfig.current,\n            onViewableItemsChanged\n        },\n    ]);\n    return (<View style={style.current.flatListContainer} testID={testID}>\n      <FlatList \n    // @ts-expect-error\n    ref={list} style={listStyle} showsVerticalScrollIndicator={showScrollIndicator} showsHorizontalScrollIndicator={showScrollIndicator} data={items} renderItem={renderItem} getItemLayout={getItemLayout} initialNumToRender={range.current} initialScrollIndex={initialDateIndex} viewabilityConfigCallbackPairs={viewabilityConfigCallbackPairs.current} testID={`${testID}.list`} onLayout={onLayout} removeClippedSubviews={removeClippedSubviews} pagingEnabled={pagingEnabled} scrollEnabled={scrollEnabled} scrollsToTop={scrollsToTop} horizontal={horizontal} keyboardShouldPersistTaps={keyboardShouldPersistTaps} keyExtractor={keyExtractor} onEndReachedThreshold={onEndReachedThreshold} onEndReached={onEndReached} nestedScrollEnabled={nestedScrollEnabled} onMomentumScrollBegin={onMomentumScrollBegin} onMomentumScrollEnd={onMomentumScrollEnd} onScrollBeginDrag={onScrollBeginDrag} onScrollEndDrag={onScrollEndDrag}/>\n      {renderStaticHeader()}\n    </View>);\n};\nexport default forwardRef(CalendarList);\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = {\n    ...Calendar.propTypes,\n    pastScrollRange: PropTypes.number,\n    futureScrollRange: PropTypes.number,\n    calendarWidth: PropTypes.number,\n    calendarHeight: PropTypes.number,\n    calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    staticHeader: PropTypes.bool,\n    showScrollIndicator: PropTypes.bool,\n    animateScroll: PropTypes.bool,\n    scrollEnabled: PropTypes.bool,\n    scrollsToTop: PropTypes.bool,\n    pagingEnabled: PropTypes.bool,\n    horizontal: PropTypes.bool,\n    keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n    keyExtractor: PropTypes.func,\n    onEndReachedThreshold: PropTypes.number,\n    onEndReached: PropTypes.func,\n    nestedScrollEnabled: PropTypes.bool\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}