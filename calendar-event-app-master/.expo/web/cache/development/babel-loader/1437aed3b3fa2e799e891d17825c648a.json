{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _xdate = _interopRequireDefault(require(\"xdate\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _this = this,\n  _jsxFileName = \"E:\\\\work\\\\PK WORK\\\\calendar-event-app-master\\\\calendar-event-app-master\\\\node_modules\\\\react-native-calendars\\\\src\\\\timeline\\\\EventBlock.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar TEXT_LINE_HEIGHT = 17;\nvar EVENT_DEFAULT_COLOR = '#add8e6';\nvar EventBlock = function EventBlock(props) {\n  var index = props.index,\n    event = props.event,\n    renderEvent = props.renderEvent,\n    onPress = props.onPress,\n    format24h = props.format24h,\n    styles = props.styles;\n  var numberOfLines = Math.floor(event.height / TEXT_LINE_HEIGHT);\n  var formatTime = format24h ? 'HH:mm' : 'hh:mm A';\n  var eventStyle = (0, _react.useMemo)(function () {\n    return {\n      left: event.left,\n      height: event.height,\n      width: event.width,\n      top: event.top,\n      backgroundColor: event.color ? event.color : EVENT_DEFAULT_COLOR\n    };\n  }, [event]);\n  var _onPress = (0, _react.useCallback)(function () {\n    onPress(index);\n  }, [index, onPress]);\n  return _react.default.createElement(_reactNative.TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: _onPress,\n    style: [styles.event, eventStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, renderEvent ? renderEvent(event) : _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 46\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    numberOfLines: 1,\n    style: styles.eventTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, event.title || 'Event'), numberOfLines > 1 ? _react.default.createElement(_reactNative.Text, {\n    numberOfLines: numberOfLines - 1,\n    style: [styles.eventSummary],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }\n  }, event.summary || ' ') : null, numberOfLines > 2 ? _react.default.createElement(_reactNative.Text, {\n    style: styles.eventTimes,\n    numberOfLines: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }\n  }, new _xdate.default(event.start).toString(formatTime), \" - \", new _xdate.default(event.end).toString(formatTime)) : null));\n};\nvar _default = EventBlock;\nexports.default = _default;","map":{"version":3,"names":["TEXT_LINE_HEIGHT","EVENT_DEFAULT_COLOR","EventBlock","props","index","event","renderEvent","onPress","format24h","styles","numberOfLines","Math","floor","height","formatTime","eventStyle","useMemo","left","width","top","backgroundColor","color","_onPress","useCallback","eventTitle","title","eventSummary","summary","eventTimes","XDate","start","toString","end"],"sources":["E:/work/PK WORK/calendar-event-app-master/calendar-event-app-master/node_modules/react-native-calendars/src/timeline/EventBlock.js"],"sourcesContent":["import XDate from 'xdate';\nimport React, { useCallback, useMemo } from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\nconst TEXT_LINE_HEIGHT = 17;\nconst EVENT_DEFAULT_COLOR = '#add8e6';\nconst EventBlock = (props) => {\n    const { index, event, renderEvent, onPress, format24h, styles } = props;\n    // Fixing the number of lines for the event title makes this calculation easier.\n    // However it would make sense to overflow the title to a new line if needed\n    const numberOfLines = Math.floor(event.height / TEXT_LINE_HEIGHT);\n    const formatTime = format24h ? 'HH:mm' : 'hh:mm A';\n    const eventStyle = useMemo(() => {\n        return {\n            left: event.left,\n            height: event.height,\n            width: event.width,\n            top: event.top,\n            backgroundColor: event.color ? event.color : EVENT_DEFAULT_COLOR\n        };\n    }, [event]);\n    const _onPress = useCallback(() => {\n        onPress(index);\n    }, [index, onPress]);\n    return (<TouchableOpacity activeOpacity={0.9} onPress={_onPress} style={[styles.event, eventStyle]}>\n      {renderEvent ? (renderEvent(event)) : (<View>\n          <Text numberOfLines={1} style={styles.eventTitle}>\n            {event.title || 'Event'}\n          </Text>\n          {numberOfLines > 1 ? (<Text numberOfLines={numberOfLines - 1} style={[styles.eventSummary]}>\n              {event.summary || ' '}\n            </Text>) : null}\n          {numberOfLines > 2 ? (<Text style={styles.eventTimes} numberOfLines={1}>\n              {new XDate(event.start).toString(formatTime)} - {new XDate(event.end).toString(formatTime)}\n            </Text>) : null}\n        </View>)}\n    </TouchableOpacity>);\n};\nexport default EventBlock;\n"],"mappings":";;;;;AAAA;AACA;AACA;AAA4D;EAAA;AAAA;AAAA;AAC5D,IAAMA,gBAAgB,GAAG,EAAE;AAC3B,IAAMC,mBAAmB,GAAG,SAAS;AACrC,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIC,KAAK,EAAK;EAC1B,IAAQC,KAAK,GAAqDD,KAAK,CAA/DC,KAAK;IAAEC,KAAK,GAA8CF,KAAK,CAAxDE,KAAK;IAAEC,WAAW,GAAiCH,KAAK,CAAjDG,WAAW;IAAEC,OAAO,GAAwBJ,KAAK,CAApCI,OAAO;IAAEC,SAAS,GAAaL,KAAK,CAA3BK,SAAS;IAAEC,MAAM,GAAKN,KAAK,CAAhBM,MAAM;EAG7D,IAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACP,KAAK,CAACQ,MAAM,GAAGb,gBAAgB,CAAC;EACjE,IAAMc,UAAU,GAAGN,SAAS,GAAG,OAAO,GAAG,SAAS;EAClD,IAAMO,UAAU,GAAG,IAAAC,cAAO,EAAC,YAAM;IAC7B,OAAO;MACHC,IAAI,EAAEZ,KAAK,CAACY,IAAI;MAChBJ,MAAM,EAAER,KAAK,CAACQ,MAAM;MACpBK,KAAK,EAAEb,KAAK,CAACa,KAAK;MAClBC,GAAG,EAAEd,KAAK,CAACc,GAAG;MACdC,eAAe,EAAEf,KAAK,CAACgB,KAAK,GAAGhB,KAAK,CAACgB,KAAK,GAAGpB;IACjD,CAAC;EACL,CAAC,EAAE,CAACI,KAAK,CAAC,CAAC;EACX,IAAMiB,QAAQ,GAAG,IAAAC,kBAAW,EAAC,YAAM;IAC/BhB,OAAO,CAACH,KAAK,CAAC;EAClB,CAAC,EAAE,CAACA,KAAK,EAAEG,OAAO,CAAC,CAAC;EACpB,OAAQ,6BAAC,6BAAgB;IAAC,aAAa,EAAE,GAAI;IAAC,OAAO,EAAEe,QAAS;IAAC,KAAK,EAAE,CAACb,MAAM,CAACJ,KAAK,EAAEU,UAAU,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAChGT,WAAW,GAAIA,WAAW,CAACD,KAAK,CAAC,GAAK,6BAAC,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACxC,6BAAC,iBAAI;IAAC,aAAa,EAAE,CAAE;IAAC,KAAK,EAAEI,MAAM,CAACe,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9CnB,KAAK,CAACoB,KAAK,IAAI,OAAO,CAClB,EACNf,aAAa,GAAG,CAAC,GAAI,6BAAC,iBAAI;IAAC,aAAa,EAAEA,aAAa,GAAG,CAAE;IAAC,KAAK,EAAE,CAACD,MAAM,CAACiB,YAAY,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACtFrB,KAAK,CAACsB,OAAO,IAAI,GAAG,CAChB,GAAI,IAAI,EAChBjB,aAAa,GAAG,CAAC,GAAI,6BAAC,iBAAI;IAAC,KAAK,EAAED,MAAM,CAACmB,UAAW;IAAC,aAAa,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAClE,IAAIC,cAAK,CAACxB,KAAK,CAACyB,KAAK,CAAC,CAACC,QAAQ,CAACjB,UAAU,CAAC,EAAC,KAAG,EAAC,IAAIe,cAAK,CAACxB,KAAK,CAAC2B,GAAG,CAAC,CAACD,QAAQ,CAACjB,UAAU,CAAC,CACrF,GAAI,IAAI,CACX,CACO;AACvB,CAAC;AAAC,eACaZ,UAAU;AAAA"},"metadata":{},"sourceType":"script"}