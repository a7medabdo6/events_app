{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _ExecutionEnvironment = require(\"fbjs/lib/ExecutionEnvironment\");\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\nvar Dimensions = function () {\n  function Dimensions() {}\n  Dimensions.get = function get(dimension) {\n    (0, _invariant.default)(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  };\n  Dimensions.set = function set(initialDimensions) {\n    if (initialDimensions) {\n      if (_ExecutionEnvironment.canUseDOM) {\n        (0, _invariant.default)(false, 'Dimensions cannot be set in the browser');\n      } else {\n        if (initialDimensions.screen != null) {\n          dimensions.screen = initialDimensions.screen;\n        }\n        if (initialDimensions.window != null) {\n          dimensions.window = initialDimensions.window;\n        }\n      }\n    }\n  };\n  Dimensions._update = function _update() {\n    if (!_ExecutionEnvironment.canUseDOM) {\n      return;\n    }\n    var win = window;\n    var docEl = win.document.documentElement;\n    dimensions.window = {\n      fontScale: 1,\n      height: docEl.clientHeight,\n      scale: win.devicePixelRatio || 1,\n      width: docEl.clientWidth\n    };\n    dimensions.screen = {\n      fontScale: 1,\n      height: win.screen.height,\n      scale: win.devicePixelRatio || 1,\n      width: win.screen.width\n    };\n    if (Array.isArray(listeners['change'])) {\n      listeners['change'].forEach(function (handler) {\n        return handler(dimensions);\n      });\n    }\n  };\n  Dimensions.addEventListener = function addEventListener(type, handler) {\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n  };\n  Dimensions.removeEventListener = function removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(function (_handler) {\n        return _handler !== handler;\n      });\n    }\n  };\n  return Dimensions;\n}();\nexports.default = Dimensions;\nif (_ExecutionEnvironment.canUseDOM) {\n  Dimensions._update();\n  window.addEventListener('resize', Dimensions._update, false);\n}","map":{"version":3,"names":["dimensions","window","fontScale","height","scale","width","screen","listeners","Dimensions","get","dimension","invariant","set","initialDimensions","canUseDOM","_update","win","docEl","document","documentElement","clientHeight","devicePixelRatio","clientWidth","Array","isArray","forEach","handler","addEventListener","type","push","removeEventListener","filter","_handler"],"sources":["E:/work/PK WORK/calendar-event-app-master/calendar-event-app-master/node_modules/react-native-web/dist/exports/Dimensions/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport invariant from 'fbjs/lib/invariant';\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\n\nvar Dimensions = /*#__PURE__*/function () {\n  function Dimensions() {}\n\n  Dimensions.get = function get(dimension) {\n    invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  };\n\n  Dimensions.set = function set(initialDimensions) {\n    if (initialDimensions) {\n      if (canUseDOM) {\n        invariant(false, 'Dimensions cannot be set in the browser');\n      } else {\n        if (initialDimensions.screen != null) {\n          dimensions.screen = initialDimensions.screen;\n        }\n\n        if (initialDimensions.window != null) {\n          dimensions.window = initialDimensions.window;\n        }\n      }\n    }\n  };\n\n  Dimensions._update = function _update() {\n    if (!canUseDOM) {\n      return;\n    }\n\n    var win = window;\n    var docEl = win.document.documentElement;\n    dimensions.window = {\n      fontScale: 1,\n      height: docEl.clientHeight,\n      scale: win.devicePixelRatio || 1,\n      width: docEl.clientWidth\n    };\n    dimensions.screen = {\n      fontScale: 1,\n      height: win.screen.height,\n      scale: win.devicePixelRatio || 1,\n      width: win.screen.width\n    };\n\n    if (Array.isArray(listeners['change'])) {\n      listeners['change'].forEach(function (handler) {\n        return handler(dimensions);\n      });\n    }\n  };\n\n  Dimensions.addEventListener = function addEventListener(type, handler) {\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n  };\n\n  Dimensions.removeEventListener = function removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(function (_handler) {\n        return _handler !== handler;\n      });\n    }\n  };\n\n  return Dimensions;\n}();\n\nexport { Dimensions as default };\n\nif (canUseDOM) {\n  Dimensions._update();\n\n  window.addEventListener('resize', Dimensions._update, false);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}