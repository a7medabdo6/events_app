{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = require(\"react\");\nvar _default = function _default(props) {\n  var onChangeOffset = props.onChangeOffset,\n    scrollOffset = props.scrollOffset,\n    scrollViewRef = props.scrollViewRef;\n  (0, _react.useEffect)(function () {\n    if (scrollOffset !== undefined) {\n      var _scrollViewRef$curren;\n      scrollViewRef == null ? void 0 : (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollTo({\n        y: scrollOffset,\n        animated: false\n      });\n    }\n  }, [scrollOffset]);\n  var onScrollEndDrag = (0, _react.useCallback)(function (event) {\n    var _event$nativeEvent$ve;\n    var offset = event.nativeEvent.contentOffset.y;\n    var velocity = (_event$nativeEvent$ve = event.nativeEvent.velocity) == null ? void 0 : _event$nativeEvent$ve.y;\n    if (velocity === 0) {\n      onChangeOffset == null ? void 0 : onChangeOffset(offset);\n    }\n  }, []);\n  var onMomentumScrollEnd = (0, _react.useCallback)(function (event) {\n    onChangeOffset == null ? void 0 : onChangeOffset(event.nativeEvent.contentOffset.y);\n  }, []);\n  return {\n    scrollEvents: {\n      onScrollEndDrag: onScrollEndDrag,\n      onMomentumScrollEnd: onMomentumScrollEnd\n    }\n  };\n};\nexports.default = _default;","map":{"version":3,"names":["props","onChangeOffset","scrollOffset","scrollViewRef","useEffect","undefined","current","scrollTo","y","animated","onScrollEndDrag","useCallback","event","offset","nativeEvent","contentOffset","velocity","onMomentumScrollEnd","scrollEvents"],"sources":["E:/work/PK WORK/calendar-event-app-master/calendar-event-app-master/node_modules/react-native-calendars/src/timeline/useTimelineOffset.js"],"sourcesContent":["import { useCallback, useEffect } from 'react';\nexport default (props) => {\n    const { onChangeOffset, scrollOffset, scrollViewRef } = props;\n    useEffect(() => {\n        // NOTE: The main reason for this feature is to sync the offset\n        // between all of the timelines in the TimelineList component\n        if (scrollOffset !== undefined) {\n            scrollViewRef?.current?.scrollTo({\n                y: scrollOffset,\n                animated: false\n            });\n        }\n    }, [scrollOffset]);\n    const onScrollEndDrag = useCallback((event) => {\n        const offset = event.nativeEvent.contentOffset.y;\n        const velocity = event.nativeEvent.velocity?.y;\n        if (velocity === 0) {\n            onChangeOffset?.(offset);\n        }\n    }, []);\n    const onMomentumScrollEnd = useCallback((event) => {\n        onChangeOffset?.(event.nativeEvent.contentOffset.y);\n    }, []);\n    return {\n        scrollEvents: {\n            onScrollEndDrag,\n            onMomentumScrollEnd\n        }\n    };\n};\n"],"mappings":";;;;AAAA;AAA+C,eAChC,kBAACA,KAAK,EAAK;EACtB,IAAQC,cAAc,GAAkCD,KAAK,CAArDC,cAAc;IAAEC,YAAY,GAAoBF,KAAK,CAArCE,YAAY;IAAEC,aAAa,GAAKH,KAAK,CAAvBG,aAAa;EACnD,IAAAC,gBAAS,EAAC,YAAM;IAGZ,IAAIF,YAAY,KAAKG,SAAS,EAAE;MAAA;MAC5BF,aAAa,6CAAbA,aAAa,CAAEG,OAAO,qBAAtB,sBAAwBC,QAAQ,CAAC;QAC7BC,CAAC,EAAEN,YAAY;QACfO,QAAQ,EAAE;MACd,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;EAClB,IAAMQ,eAAe,GAAG,IAAAC,kBAAW,EAAC,UAACC,KAAK,EAAK;IAAA;IAC3C,IAAMC,MAAM,GAAGD,KAAK,CAACE,WAAW,CAACC,aAAa,CAACP,CAAC;IAChD,IAAMQ,QAAQ,4BAAGJ,KAAK,CAACE,WAAW,CAACE,QAAQ,qBAA1B,sBAA4BR,CAAC;IAC9C,IAAIQ,QAAQ,KAAK,CAAC,EAAE;MAChBf,cAAc,oBAAdA,cAAc,CAAGY,MAAM,CAAC;IAC5B;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,IAAMI,mBAAmB,GAAG,IAAAN,kBAAW,EAAC,UAACC,KAAK,EAAK;IAC/CX,cAAc,oBAAdA,cAAc,CAAGW,KAAK,CAACE,WAAW,CAACC,aAAa,CAACP,CAAC,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IACHU,YAAY,EAAE;MACVR,eAAe,EAAfA,eAAe;MACfO,mBAAmB,EAAnBA;IACJ;EACJ,CAAC;AACL,CAAC;AAAA"},"metadata":{},"sourceType":"script"}