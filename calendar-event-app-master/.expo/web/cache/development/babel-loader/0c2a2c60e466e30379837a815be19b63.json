{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _zustand = _interopRequireDefault(require(\"zustand\"));\nvar _immer = _interopRequireDefault(require(\"immer\"));\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\nvar immer = function immer(config) {\n  return function (set, get, api) {\n    return config(function (fn) {\n      var state = typeof fn === 'function' ? fn : function () {\n        return fn;\n      };\n      set((0, _immer.default)(state));\n    }, get, api);\n  };\n};\nvar zustandCreateStore = function zustandCreateStore(children) {\n  return (0, _zustand.default)(immer(children));\n};\nvar storeStates = {\n  todo: []\n};\nvar storeMethods = function storeMethods(set, get) {\n  return {\n    init: function init() {\n      var todo;\n      return _regenerator.default.async(function init$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regenerator.default.awrap(_asyncStorage.default.getItem('TODO'));\n            case 3:\n              todo = _context.sent;\n              if (todo !== null) {\n                set({\n                  todo: JSON.parse(todo)\n                });\n              }\n              _context.next = 9;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    },\n    updateTodo: function updateTodo(item) {\n      return _regenerator.default.async(function updateTodo$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", new Promise(function _callee(resolve) {\n                var datePresent, updatedTodo, newTodo;\n                return _regenerator.default.async(function _callee$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        datePresent = get().todo.find(function (data) {\n                          if (data.date === item.date) {\n                            return true;\n                          }\n                          return false;\n                        });\n                        if (!datePresent) {\n                          _context2.next = 13;\n                          break;\n                        }\n                        updatedTodo = get().todo.map(function (data) {\n                          if (datePresent.date === data.date) {\n                            return (0, _extends2.default)({}, data, {\n                              todoList: [].concat((0, _toConsumableArray2.default)(data.todoList), (0, _toConsumableArray2.default)(item.todoList))\n                            });\n                          }\n                          return data;\n                        });\n                        _context2.prev = 3;\n                        set({\n                          todo: updatedTodo\n                        });\n                        _context2.next = 7;\n                        return _regenerator.default.awrap(_asyncStorage.default.setItem('TODO', JSON.stringify(updatedTodo)));\n                      case 7:\n                        _context2.next = 11;\n                        break;\n                      case 9:\n                        _context2.prev = 9;\n                        _context2.t0 = _context2[\"catch\"](3);\n                      case 11:\n                        _context2.next = 23;\n                        break;\n                      case 13:\n                        newTodo = [].concat((0, _toConsumableArray2.default)(get().todo), [item]);\n                        _context2.prev = 14;\n                        set({\n                          todo: newTodo\n                        });\n                        resolve();\n                        _context2.next = 19;\n                        return _regenerator.default.awrap(_asyncStorage.default.setItem('TODO', JSON.stringify(newTodo)));\n                      case 19:\n                        _context2.next = 23;\n                        break;\n                      case 21:\n                        _context2.prev = 21;\n                        _context2.t1 = _context2[\"catch\"](14);\n                      case 23:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, [[3, 9], [14, 21]], Promise);\n              }));\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    deleteTodo: function deleteTodo() {},\n    updateSelectedTask: function updateSelectedTask(item) {\n      return _regenerator.default.async(function updateSelectedTask$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", new Promise(function _callee2(resolve) {\n                var previousTodo, newTodo;\n                return _regenerator.default.async(function _callee2$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        previousTodo = get().todo;\n                        newTodo = previousTodo.map(function (data) {\n                          if (item.date === data.date) {\n                            var previousTodoList = (0, _toConsumableArray2.default)(data.todoList);\n                            var newTodoList = previousTodoList.map(function (list) {\n                              if (list.key === item.todo.key) {\n                                return item.todo;\n                              }\n                              return list;\n                            });\n                            return (0, _extends2.default)({}, data, {\n                              todoList: newTodoList\n                            });\n                          }\n                          return data;\n                        });\n                        _context4.prev = 2;\n                        set({\n                          todo: newTodo\n                        });\n                        resolve();\n                        _context4.next = 7;\n                        return _regenerator.default.awrap(_asyncStorage.default.setItem('TODO', JSON.stringify(newTodo)));\n                      case 7:\n                        _context4.next = 11;\n                        break;\n                      case 9:\n                        _context4.prev = 9;\n                        _context4.t0 = _context4[\"catch\"](2);\n                      case 11:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, null, null, [[2, 9]], Promise);\n              }));\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    deleteSelectedTask: function deleteSelectedTask(item) {\n      return _regenerator.default.async(function deleteSelectedTask$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", new Promise(function _callee3(resolve) {\n                var previousTodo, newTodo, checkForEmpty;\n                return _regenerator.default.async(function _callee3$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        previousTodo = get().todo;\n                        newTodo = previousTodo.map(function (data) {\n                          if (item.date === data.date) {\n                            var previousTodoList = (0, _toConsumableArray2.default)(data.todoList);\n                            var newTodoList = previousTodoList.filter(function (list) {\n                              if (list.key === item.todo.key) {\n                                return false;\n                              }\n                              return true;\n                            });\n                            return (0, _extends2.default)({}, data, {\n                              todoList: newTodoList\n                            });\n                          }\n                          return data;\n                        });\n                        checkForEmpty = newTodo.filter(function (data) {\n                          if (data.todoList.length === 0) {\n                            return false;\n                          }\n                          return true;\n                        });\n                        _context6.prev = 3;\n                        set({\n                          todo: checkForEmpty\n                        });\n                        resolve();\n                        _context6.next = 8;\n                        return _regenerator.default.awrap(_asyncStorage.default.setItem('TODO', JSON.stringify(checkForEmpty)));\n                      case 8:\n                        _context6.next = 12;\n                        break;\n                      case 10:\n                        _context6.prev = 10;\n                        _context6.t0 = _context6[\"catch\"](3);\n                      case 12:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, null, null, [[3, 10]], Promise);\n              }));\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  };\n};\nvar useStore = zustandCreateStore(function (set, get) {\n  return (0, _extends2.default)({}, storeStates, storeMethods(set, get));\n});\nvar _default = useStore;\nexports.default = _default;","map":{"version":3,"names":["immer","config","set","get","api","fn","state","produce","zustandCreateStore","children","create","storeStates","todo","storeMethods","init","AsyncStorage","getItem","JSON","parse","updateTodo","item","Promise","resolve","datePresent","find","data","date","updatedTodo","map","todoList","setItem","stringify","newTodo","deleteTodo","updateSelectedTask","previousTodo","previousTodoList","newTodoList","list","key","deleteSelectedTask","filter","checkForEmpty","length","useStore"],"sources":["E:/work/PK WORK/calendar-event-app-master/calendar-event-app-master/src/store/store.js"],"sourcesContent":["import create from 'zustand';\nimport produce from 'immer';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n// Turn the set method into an immer proxy\nconst immer = (config) => (set, get, api) =>\n  config(\n    (fn) => {\n      const state = typeof fn === 'function' ? fn : () => fn;\n      set(produce(state));\n    },\n    get,\n    api\n  );\n\nconst zustandCreateStore = (children) => create(immer(children));\n\nconst storeStates = {\n  todo: []\n};\n\nconst storeMethods = (set, get) => ({\n  init: async () => {\n    try {\n      // await AsyncStorage.clear();\n      const todo = await AsyncStorage.getItem('TODO');\n      if (todo !== null) {\n        set({ todo: JSON.parse(todo) });\n      }\n    } catch (error) {\n      // Error saving data\n    }\n  },\n  updateTodo: async (item) =>\n    new Promise(async (resolve) => {\n      const datePresent = get().todo.find((data) => {\n        if (data.date === item.date) {\n          return true;\n        }\n        return false;\n      });\n\n      if (datePresent) {\n        const updatedTodo = get().todo.map((data) => {\n          if (datePresent.date === data.date) {\n            return { ...data, todoList: [...data.todoList, ...item.todoList] };\n          }\n          return data;\n        });\n\n        try {\n          set({ todo: updatedTodo });\n          await AsyncStorage.setItem('TODO', JSON.stringify(updatedTodo));\n        } catch (error) {\n          // Error saving data\n        }\n      } else {\n        const newTodo = [...get().todo, item];\n\n        try {\n          set({ todo: newTodo });\n          resolve();\n          await AsyncStorage.setItem('TODO', JSON.stringify(newTodo));\n        } catch (error) {\n          // Error saving data\n        }\n      }\n    }),\n  deleteTodo: () => {},\n  updateSelectedTask: async (item) =>\n    new Promise(async (resolve) => {\n      const previousTodo = get().todo;\n      const newTodo = previousTodo.map((data) => {\n        if (item.date === data.date) {\n          const previousTodoList = [...data.todoList];\n          const newTodoList = previousTodoList.map((list) => {\n            if (list.key === item.todo.key) {\n              return item.todo;\n            }\n            return list;\n          });\n          return { ...data, todoList: newTodoList };\n        }\n        return data;\n      });\n      try {\n        set({ todo: newTodo });\n        resolve();\n        await AsyncStorage.setItem('TODO', JSON.stringify(newTodo));\n      } catch (error) {\n        // Error saving data\n      }\n    }),\n  deleteSelectedTask: async (item) =>\n    new Promise(async (resolve) => {\n      const previousTodo = get().todo;\n      const newTodo = previousTodo.map((data) => {\n        if (item.date === data.date) {\n          const previousTodoList = [...data.todoList];\n          const newTodoList = previousTodoList.filter((list) => {\n            if (list.key === item.todo.key) {\n              return false;\n            }\n            return true;\n          });\n\n          return { ...data, todoList: newTodoList };\n        }\n        return data;\n      });\n      const checkForEmpty = newTodo.filter((data) => {\n        if (data.todoList.length === 0) {\n          return false;\n        }\n        return true;\n      });\n      try {\n        set({ todo: checkForEmpty });\n        resolve();\n        await AsyncStorage.setItem('TODO', JSON.stringify(checkForEmpty));\n      } catch (error) {\n        // Error saving data\n      }\n    })\n});\n\nconst useStore = zustandCreateStore((set, get) => ({\n  ...storeStates,\n  ...storeMethods(set, get)\n}));\n\nexport default useStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}